# Copyright (c) 2022, NVIDIA CORPORATION.

{% set version = environ.get('GIT_DESCRIBE_TAG', '0.0.0.dev').lstrip('v') + environ.get('VERSION_SUFFIX', '') %}
{% set minor_version = version.split('.')[0] + '.' + version.split('.')[1] %}
{% set py_version=environ.get('CONDA_PY', 38) %}
{% set cuda_version='.'.join(environ.get('CUDA', '11.5').split('.')[:2]) %}
{% set cuda_major=cuda_version.split('.')[0] %}

package:
  name: strings_udf
  version: {{ version }}

source:
  git_url: ../../..

build:
  number: {{ GIT_DESCRIBE_NUMBER }}
  string: cuda_{{ cuda_major }}_py{{ py_version }}_{{ GIT_DESCRIBE_HASH }}_{{ GIT_DESCRIBE_NUMBER }}
  script_env:
    - VERSION_SUFFIX
    - PARALLEL_LEVEL
  # libcudf's run_exports pinning is looser than we would like
  ignore_run_exports:
    - libcudf
  ignore_run_exports_from:
    - {{ compiler('cuda') }}

requirements:
  build:
    - cmake {{ cmake_version }}
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }} {{ cuda_version }}
    - sysroot_{{ target_platform }} {{ sysroot_version }}
  host:
    - python
    - cython >=0.29,<0.30
    - scikit-build>=0.13.1
    - setuptools
    - numba >=0.54
    - libcudf ={{ version }}
    - cudf ={{ version }}
    - cudatoolkit {{ cuda_version }}.*
  run:
    - python
    - typing_extensions
    - numba >=0.54
    - numpy
    - libcudf ={{ version }}
    - cudf ={{ version }}
    - {{ pin_compatible('cudatoolkit', max_pin='x', min_pin='x') }}
    - cachetools
    - ptxcompiler  # [linux64]  # CUDA enhanced compatibility. See https://github.com/rapidsai/ptxcompiler
test:                                   # [linux64]
  requires:                             # [linux64]
    - cudatoolkit {{ cuda_version }}.*  # [linux64]
  imports:                              # [linux64]
    - strings_udf                       # [linux64]

about:
  home: https://rapids.ai/
  license: Apache-2.0
  license_family: APACHE
  license_file: LICENSE
  summary: strings_udf library
