name: test

on:
  workflow_dispatch:
    inputs:
      branch:
        required: true
        type: string
      date:
        required: true
        type: string
      sha:
        required: true
        type: string

jobs:
  conda-cpp-checks:
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/conda-cpp-post-build-checks.yaml@branch-24.04
    with:
      build_type: nightly
      branch: ${{ inputs.branch }}
      date: ${{ inputs.date }}
      sha: ${{ inputs.sha }}
      enable_check_symbols: true
  conda-cpp-tests:
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/conda-cpp-tests.yaml@branch-24.04
    with:
      build_type: nightly
      branch: ${{ inputs.branch }}
      date: ${{ inputs.date }}
      sha: ${{ inputs.sha }}
  conda-cpp-memcheck-tests:
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/custom-job.yaml@branch-24.04
    with:
      build_type: nightly
      branch: ${{ inputs.branch }}
      date: ${{ inputs.date }}
      sha: ${{ inputs.sha }}
      node_type: "gpu-v100-latest-1"
      arch: "amd64"
      container_image: "rapidsai/ci-conda:latest"
      run_script: "ci/test_cpp_memcheck.sh"
  conda-python-cudf-tests:
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/conda-python-tests.yaml@branch-24.04
    with:
      build_type: nightly
      branch: ${{ inputs.branch }}
      date: ${{ inputs.date }}
      sha: ${{ inputs.sha }}
      script: "ci/test_python_cudf.sh"
  conda-python-other-tests:
    # Tests for dask_cudf, custreamz, cudf_kafka are separated for CI parallelism
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/conda-python-tests.yaml@branch-24.04
    with:
      build_type: nightly
      branch: ${{ inputs.branch }}
      date: ${{ inputs.date }}
      sha: ${{ inputs.sha }}
      script: "ci/test_python_other.sh"
  conda-java-tests:
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/custom-job.yaml@branch-24.04
    with:
      build_type: nightly
      branch: ${{ inputs.branch }}
      date: ${{ inputs.date }}
      sha: ${{ inputs.sha }}
      node_type: "gpu-v100-latest-1"
      arch: "amd64"
      container_image: "rapidsai/ci-conda:latest"
      run_script: "ci/test_java.sh"
  conda-notebook-tests:
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/custom-job.yaml@branch-24.04
    with:
      build_type: nightly
      branch: ${{ inputs.branch }}
      date: ${{ inputs.date }}
      sha: ${{ inputs.sha }}
      node_type: "gpu-v100-latest-1"
      arch: "amd64"
      container_image: "rapidsai/ci-conda:latest"
      run_script: "ci/test_notebooks.sh"
  wheel-tests-cudf:
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-test.yaml@branch-24.04
    with:
      build_type: nightly
      branch: ${{ inputs.branch }}
      date: ${{ inputs.date }}
      sha: ${{ inputs.sha }}
      script: ci/test_wheel_cudf.sh
  wheel-tests-dask-cudf:
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-test.yaml@branch-24.04
    with:
      # This selects "ARCH=amd64 + the latest supported Python + CUDA".
      matrix_filter: map(select(.ARCH == "amd64")) | group_by(.CUDA_VER|split(".")|map(tonumber)|.[0]) | map(max_by([(.PY_VER|split(".")|map(tonumber)), (.CUDA_VER|split(".")|map(tonumber))]))
      build_type: nightly
      branch: ${{ inputs.branch }}
      date: ${{ inputs.date }}
      sha: ${{ inputs.sha }}
      script: ci/test_wheel_dask_cudf.sh
  unit-tests-cudf-pandas:
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-test.yaml@branch-24.04
    with:
      build_type: nightly
      branch: ${{ inputs.branch }}
      date: ${{ inputs.date }}
      sha: ${{ inputs.sha }}
      script: ci/cudf_pandas_scripts/run_tests.sh
  pandas-tests:
    # run the Pandas unit tests
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-test.yaml@branch-24.04
    with:
      matrix_filter: map(select(.ARCH == "amd64")) | group_by(.CUDA_VER|split(".")|map(tonumber)|.[0]) | map(max_by([(.PY_VER|split(".")|map(tonumber)), (.CUDA_VER|split(".")|map(tonumber))]))
      build_type: nightly
      branch: ${{ inputs.branch }}
      date: ${{ inputs.date }}
      sha: ${{ inputs.sha }}
      script: ci/cudf_pandas_scripts/pandas-tests/run.sh main
