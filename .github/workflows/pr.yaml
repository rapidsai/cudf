name: pr

on:
  push:
    branches:
      - "pull-request/[0-9]+"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Please keep pr-builder as the top job here
  pr-builder:
    needs:
      - check-nightly-ci
      - changed-files
      - checks
      - wheel-build-libcudf
      - wheel-build-pylibcudf
      - wheel-build-cudf
      - wheel-tests-cudf
      - wheel-build-cudf-polars
      - wheel-tests-cudf-polars
      - cudf-polars-polars-tests
      - wheel-build-dask-cudf
      - wheel-tests-dask-cudf
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/pr-builder.yaml@branch-25.10
    if: always()
    with:
      needs: ${{ toJSON(needs) }}
  telemetry-setup:
    continue-on-error: true
    runs-on: ubuntu-latest
    env:
      OTEL_SERVICE_NAME: 'pr-cudf'
    steps:
      - name: Telemetry setup
        if: ${{ vars.TELEMETRY_ENABLED == 'true' }}
        uses: rapidsai/shared-actions/telemetry-dispatch-stash-base-env-vars@main
  check-nightly-ci:
    runs-on: ubuntu-latest
    env:
      RAPIDS_GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Check if nightly CI is passing
        uses: rapidsai/shared-actions/check_nightly_success/dispatch@main
        with:
          repo: cudf
  changed-files:
    secrets: inherit
    needs: telemetry-setup
    uses: rapidsai/shared-workflows/.github/workflows/changed-files.yaml@branch-25.10
    with:
      files_yaml: |
        test_cpp:
          - '**'
          - '!.devcontainer/**'
          - '!CONTRIBUTING.md'
          - '!README.md'
          - '!ci/cudf_pandas_scripts/**'
          - '!ci/release/update-version.sh'
          - '!docs/**'
          - '!img/**'
          - '!java/**'
          - '!notebooks/**'
          - '!python/**'
        test_cudf_pandas:
          - '**'
          - '!.clang-format'
          - '!.devcontainer/**'
          - '!CONTRIBUTING.md'
          - '!README.md'
          - '!ci/release/update-version.sh'
          - '!docs/**'
          - '!img/**'
          - '!java/**'
          - '!notebooks/**'
        test_java:
          - '**'
          - '!.clang-format'
          - '!.devcontainer/**'
          - '!CONTRIBUTING.md'
          - '!README.md'
          - '!ci/cudf_pandas_scripts/**'
          - '!ci/release/update-version.sh'
          - '!docs/**'
          - '!img/**'
          - '!notebooks/**'
          - '!python/**'
        test_notebooks:
          - '**'
          - '!.clang-format'
          - '!.devcontainer/**'
          - '!CONTRIBUTING.md'
          - '!README.md'
          - '!ci/cudf_pandas_scripts/**'
          - '!ci/release/update-version.sh'
          - '!java/**'
        test_python:
          - '**'
          - '!.clang-format'
          - '!.devcontainer/**'
          - '!CONTRIBUTING.md'
          - '!README.md'
          - '!ci/cudf_pandas_scripts/**'
          - '!ci/release/update-version.sh'
          - '!docs/**'
          - '!img/**'
          - '!java/**'
          - '!notebooks/**'
  checks:
    secrets: inherit
    needs: telemetry-setup
    uses: rapidsai/shared-workflows/.github/workflows/checks.yaml@branch-25.10
    with:
      enable_check_generated_files: false
      ignored_pr_jobs: "telemetry-summarize spark-rapids-jni"
  wheel-build-libcudf:
    needs: checks
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-build.yaml@branch-25.10
    with:
      # build for every combination of arch and CUDA version, but only for the latest Python
      matrix_filter: group_by([.ARCH, (.CUDA_VER|split(".")|map(tonumber)|.[0])]) | map(max_by(.PY_VER|split(".")|map(tonumber)))
      build_type: pull-request
      node_type: "cpu16"
      script: "ci/build_wheel_libcudf.sh"
      package-name: libcudf
      package-type: cpp
  wheel-build-pylibcudf:
    needs: [checks, wheel-build-libcudf]
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-build.yaml@branch-25.10
    with:
      build_type: pull-request
      script: "ci/build_wheel_pylibcudf.sh"
      package-name: pylibcudf
      package-type: python
  wheel-build-cudf:
    needs: wheel-build-pylibcudf
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-build.yaml@branch-25.10
    with:
      build_type: pull-request
      script: "ci/build_wheel_cudf.sh"
      package-name: cudf
      package-type: python
  wheel-tests-cudf:
    needs: [wheel-build-cudf, changed-files]
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-test.yaml@branch-25.10
    if: fromJSON(needs.changed-files.outputs.changed_file_groups).test_python
    with:
      build_type: pull-request
      script: ci/test_wheel_cudf.sh
  wheel-build-cudf-polars:
    needs: wheel-build-pylibcudf
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-build.yaml@branch-25.10
    with:
      # This selects "ARCH=amd64 + the latest supported Python + CUDA".
      matrix_filter: map(select(.ARCH == "amd64")) | group_by(.CUDA_VER|split(".")|map(tonumber)|.[0]) | map(max_by([(.PY_VER|split(".")|map(tonumber)), (.CUDA_VER|split(".")|map(tonumber))]))
      build_type: pull-request
      script: "ci/build_wheel_cudf_polars.sh"
      package-name: cudf_polars
      package-type: python
      pure-wheel: true
  wheel-tests-cudf-polars:
    needs: [wheel-build-cudf-polars, changed-files]
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-test.yaml@branch-25.10
    if: fromJSON(needs.changed-files.outputs.changed_file_groups).test_python
    with:
      # This selects "ARCH=amd64 + the latest supported Python + CUDA".
      matrix_filter: map(select(.ARCH == "amd64")) | group_by(.CUDA_VER|split(".")|map(tonumber)|.[0]) | map(max_by([(.PY_VER|split(".")|map(tonumber)), (.CUDA_VER|split(".")|map(tonumber))]))
      build_type: pull-request
      script: "ci/test_wheel_cudf_polars.sh"
  cudf-polars-polars-tests:
    needs: wheel-build-cudf-polars
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-test.yaml@branch-25.10
    with:
      # This selects "ARCH=amd64 + the latest supported Python + CUDA".
      matrix_filter: map(select(.ARCH == "amd64")) | group_by(.CUDA_VER|split(".")|map(tonumber)|.[0]) | map(max_by([(.PY_VER|split(".")|map(tonumber)), (.CUDA_VER|split(".")|map(tonumber))]))
      build_type: pull-request
      script: "ci/test_cudf_polars_polars_tests.sh"
  wheel-build-dask-cudf:
    needs: wheel-build-cudf
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-build.yaml@branch-25.10
    with:
      # This selects "ARCH=amd64 + the latest supported Python + CUDA".
      matrix_filter: map(select(.ARCH == "amd64")) | group_by(.CUDA_VER|split(".")|map(tonumber)|.[0]) | map(max_by([(.PY_VER|split(".")|map(tonumber)), (.CUDA_VER|split(".")|map(tonumber))]))
      build_type: pull-request
      script: "ci/build_wheel_dask_cudf.sh"
      package-name: dask_cudf
      package-type: python
      pure-wheel: true
  wheel-tests-dask-cudf:
    needs: [wheel-build-dask-cudf, changed-files]
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-test.yaml@branch-25.10
    if: fromJSON(needs.changed-files.outputs.changed_file_groups).test_python
    with:
      # This selects "ARCH=amd64 + the latest supported Python + CUDA".
      matrix_filter: map(select(.ARCH == "amd64")) | group_by(.CUDA_VER|split(".")|map(tonumber)|.[0]) | map(max_by([(.PY_VER|split(".")|map(tonumber)), (.CUDA_VER|split(".")|map(tonumber))]))
      build_type: pull-request
      script: ci/test_wheel_dask_cudf.sh

  telemetry-summarize:
    # This job must use a self-hosted runner to record telemetry traces.
    runs-on: linux-amd64-cpu4
    needs: pr-builder
    if: ${{ vars.TELEMETRY_ENABLED == 'true' && !cancelled() }}
    continue-on-error: true
    steps:
      - name: Telemetry summarize
        uses: rapidsai/shared-actions/telemetry-dispatch-summarize@main
    env:
      GH_TOKEN: ${{ github.token }}
