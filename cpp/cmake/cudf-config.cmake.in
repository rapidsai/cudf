@PACKAGE_INIT@

cmake_minimum_required(VERSION 3.18)

set(CUDF_VERSION @CUDF_VERSION@)
set(CUDF_VERSION_MAJOR @CUDF_VERSION_MAJOR@)
set(CUDF_VERSION_MINOR @CUDF_VERSION_MINOR@)

# make the bundled find modules in this directory available
list(PREPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}")

include(CMakeFindDependencyMacro)

find_dependency(CUDAToolkit)
find_dependency(Threads)
find_dependency(ZLIB)

# Don't look for a Boost CMake configuration file because it adds the
# `-DBOOST_ALL_NO_LIB` and `-DBOOST_FILESYSTEM_DYN_LINK` compile defs
set(Boost_NO_BOOST_CMAKE ON)
find_dependency(Boost @CUDF_MIN_VERSION_Boost@ COMPONENTS filesystem)

find_dependency(Arrow @CUDF_VERSION_Arrow@)

set(ArrowCUDA_DIR "${Arrow_DIR}")
find_dependency(ArrowCUDA @CUDF_VERSION_Arrow@)

find_dependency(rmm @CUDF_MIN_VERSION_rmm@)
find_dependency(GTest @CUDF_MIN_VERSION_GTest@)

set(Thrust_ROOT "${CMAKE_CURRENT_LIST_DIR}/../../../include/libcudf/Thrust")
find_dependency(Thrust @CUDF_MIN_VERSION_Thrust@)
thrust_create_target(cudf::Thrust FROM_OPTIONS)

list(POP_FRONT CMAKE_MODULE_PATH)

include("${CMAKE_CURRENT_LIST_DIR}/cudf-targets.cmake")
include("${CMAKE_CURRENT_LIST_DIR}/cudf-config-version.cmake")

check_required_components(cudf)

set(${CMAKE_FIND_PACKAGE_NAME}_CONFIG "${CMAKE_CURRENT_LIST_FILE}")

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(${CMAKE_FIND_PACKAGE_NAME} CONFIG_MODE)
