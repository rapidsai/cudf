# SPDX-FileCopyrightText: Copyright (c) 2023-2025, NVIDIA CORPORATION & AFFILIATES.
# All rights reserved.
# SPDX-License-Identifier: Apache-2.0

import contextlib
import json
import os
import sys
import traceback
from collections import defaultdict
from functools import wraps

import pytest


def replace_kwargs(new_kwargs):
    def wrapper(func):
        @wraps(func)
        def wrapped(*args, **kwargs):
            kwargs.update(new_kwargs)
            return func(*args, **kwargs)

        return wrapped

    return wrapper


@contextlib.contextmanager
def null_assert_warnings(*args, **kwargs):
    try:
        yield []
    finally:
        pass


@pytest.fixture(scope="session", autouse=True)  # type: ignore
def patch_testing_functions():
    tm.assert_produces_warning = null_assert_warnings  # noqa: F821
    pytest.raises = replace_kwargs({"match": None})(pytest.raises)


# Dictionary to store function call counts
function_call_counts = {}  # type: ignore

# The specific functions to track
FUNCTION_NAME = {"_slow_function_call", "_fast_function_call"}


def find_pytest_file(frame):
    stack = traceback.extract_stack()
    absolute_paths = [frame.filename for frame in stack]
    for file in absolute_paths:
        if "pandas-testing/pandas-tests/tests" in file and file.rsplit("/", 1)[
            -1
        ].startswith("test_"):
            return str(file).rsplit("pandas-tests/", 1)[-1]
    return None


def trace_calls(frame, event, arg):
    if event != "call":
        return
    code = frame.f_code
    func_name = code.co_name

    if func_name in FUNCTION_NAME:
        filename = find_pytest_file(frame)
        if filename is None:
            return
        if filename not in function_call_counts:
            function_call_counts[filename] = defaultdict(int)
        function_call_counts[filename][func_name] += 1


def pytest_sessionstart(session):
    # Set the profile function to trace calls
    sys.setprofile(trace_calls)


def pytest_sessionfinish(session, exitstatus):
    # Remove the profile function
    sys.setprofile(None)


@pytest.hookimpl(trylast=True)
def pytest_unconfigure(config):
    if hasattr(config, "workerinput"):
        # Running in xdist worker, write the counts before exiting
        worker_id = config.workerinput["workerid"]
        output_file = f"function_call_counts_worker_{worker_id}.json"
        with open(output_file, "w") as f:
            json.dump(function_call_counts, f, indent=4)
        print(f"Function call counts have been written to {output_file}")  # noqa: T201


ERROR_MESSAGES = {
    "Names should be list-like for a MultiIndex",
    "Attributes of DataFrame.iloc[:, 1] (",
    "Could not convert <NA> with type NAType: did not recognize Python value type when inferring an Arrow data type",
    "Failed: DID NOT RAISE <class 'TypeError'>",
    "'Column not found: both'",
    "parallel_for failed: cudaErrorUnknown: unknown error",
    "assert {} == {'a': 1}",
    "assert ",
    "'DataFrameGroupBy' object has no attribute",
    "'SeriesGroupBy' object has no attribute",
    "DataFrame are different",
    "'RangeIndex' object has no attribute '_range'",
    "DID NOT RAISE <",
    "right is not an ExtensionArray",
    "bad operand type for unary +:",
    "'ExcelFile' object has no attribute",
    "Could not convert Timedelta(",
    "'bool' object has no attribute 'any'",
    "'bool' object has no attribute 'all'",
    "The truth value of a DataFrame is ambiguous",
    "Cannot directly instantiate object",
    "Must pass DataFrame or 2-d ndarray with boolean values only",
    "closed keyword does not match dtype.closed",
    "Names must be a list-like",
    "'SQLTable' object has no attribute 'table'",
    "(<MonthEnd>, None)",
    "Did not use numexpr as expected.",
    "'_MethodProxy' object has no attribute",
    "assert 1 > 1",
    "'numpy.dtypes.ObjectDType' object has no attribute 'numpy_dtype'",
    "'numpy.dtypes.Float64DType' object has no attribute 'numpy_dtype'",
    "'numpy.dtypes.ObjectDType' object has no attribute 'numpy_dtype'",
    "DID NOT RAISE (<class 'TypeError'>, <class 'TypeError'>)",
    "'>' not supported between instances of 'float' and 'tuple'",
    "'<' not supported between instances of 'float' and 'tuple'",
    "unhashable type: 'list'",
    "left is not an ExtensionArray",
    "DID NOT RAISE (<class 'NotImplementedError'>, <class 'TypeError'>)",
    "ufunc 'add' cannot use operands with types",
    'Attribute "inferred_type" are different',
    "cannot reindex on an axis with duplicate labels",
    "Series Expected type <class 'pandas.core.series.Series'>, found <class 'numpy.ndarray'> instead",
    "Series Expected type",
    "numpy array are different",
    "dtype('<M8[h]')",
    "dtype('<M8[m]')",
    "assert 0 == 1",
    "assert None",
    "assert <DatetimeArray>\\n",
    "'Period' object is not iterable",
    "'DataFrameGroupBy' object has no attribute '_grouper'. Did you mean: 'grouper'?",
    "Length of values (4) does not match length of index (3)",
    "columns length expected 4 but found 2",
    "Shape of passed values is (3, 4), indices imply (3, 2)",
    "database is locked",
    "maximum recursion depth exceeded",
    "Fast implementation not available. Falling back to the slow implementation",
    "Option 'chained_assignment' has already been registered",
    "'Styler' object has no attribute 'columns'",
    "freq is not implemented yet",
    "'numpy.ndarray' object has no attribute 'columns'",
    "'numpy.ndarray' object has no attribute 'index'",
    "DataFrame object has no attribute tolist",
    "'DataFrame' object has no attribute 'tolist'",
    "'SparseArray' object has no attribute '_sparse_values'",
    "'Series' object has no attribute 'x'",
    "'numpy.ndarray' object has no attribute 'iloc'",
    "'Categorical' object has no attribute '__array__'",
    "'MyIndex' object has no attribute '_fsproxy_wrapped'",
    "'bool' object has no attribute 'item'",
    "'numpy.float64' object has no attribute 'sort_index'",
    "'FrozenList' object has no attribute '__array__'",
    "'DatetimeTZDtype' object has no attribute '__from_arrow__'",
    "'Int8Dtype' object has no attribute '__from_arrow__'",
    "'Int16Dtype' object has no attribute '__from_arrow__'",
    "'Int32Dtype' object has no attribute '__from_arrow__'",
    "'Int64Dtype' object has no attribute '__from_arrow__'",
    "'UInt8Dtype' object has no attribute '__from_arrow__'",
    "'UInt16Dtype' object has no attribute '__from_arrow__'",
    "'UInt32Dtype' object has no attribute '__from_arrow__'",
    "'UInt64Dtype' object has no attribute '__from_arrow__'",
    "'Float32Dtype' object has no attribute '__from_arrow__'",
    "'Float64Dtype' object has no attribute '__from_arrow__'",
    "'Float16Dtype' object has no attribute '__from_arrow__'",
    "Duplicate column names are not allowed",
    "value must be a scalar",
    "All columns must be of equal length",
    "The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().",
    "codes need to be between -1 and len(categories)-1",
    "This column does not support to be converted to a pandas ExtensionArray",
    "storage_options passed with file object or non-fsspec file path",
    "Inferred frequency None from passed values does not conform to passed frequency",
    "Could not convert strings to integer type due to presence of non-integer values.",
    "Length of names must match number of levels in MultiIndex.",
    "Inferred frequency 2D from passed values does not conform to passed frequency D",
    "int() argument must be a string, a bytes-like object or a real number, not 'Timestamp'",
    "unsupported operand type(s) for +: 'DatetimeArray' and 'Timedelta'",
    "Cannot convert a floating of object type",
    "Can't pickle <class",
    "conversion from DecimalArray to Decimal is not supported",
    "unsupported format string passed to MultiIndex.__format__",
    "Cannot have mixed values with boolean",
    "Cannot have NaN with string",
    "object of type <class 'str'> cannot be converted to int",
    "'method' object is not subscriptable",
    "'BooleanDtype' object has no attribute '__from_arrow__'",
    "'DataFrame' object has no attribute 'dtype'. Did you mean: 'dtypes'?",
    "'DataFrame' object has no attribute 'name'",
    "'DataFrameGroupBy' object has no attribute '_grouper'. Did you mean: 'grouper'?",
    "'DateOffset' object has no attribute '_offset'",
    "'DateOffset' object has no attribute ",
    "'DatetimeProperties' object has no attribute 'days'. Did you mean: 'day'?",
    "'FixedForwardWindowIndexer' object has no attribute 'window_size'",
    "'Index' object has no attribute '_cache'",
    "'IntervalArray' object has no attribute '_left'. Did you mean: 'left'?",
    "'IntervalDtype' object has no attribute '__from_arrow__'",
    "'Series' object has no attribute 'custom_series_function'",
    "'Styler' object has no attribute 'columns'",
    "'_PickleConstructor' object has no attribute '__name__'. Did you mean: '__ne__'?",
    "'dict' object has no attribute 'fillna'",
    "'numpy.int64' object has no attribute 'iloc'",
    "Can only use .str accessor with string values!",
    "assert array([",
    "Can only use .str accessor with string values. Did you mean: 'std'?",
    "DataFrame object has no attribute name",
    "No attribute 'Block'. Did you mean: 'blocks'?",
    "DataFrame Expected type <class",
    "No attribute 'DatetimeTZBlock'",
    "No attribute 'ExtensionBlock'",
    "No attribute 'NumericBlock'",
    "No attribute 'ObjectBlock'",
    "No attribute 'PandasArray'",
    "'collections.defaultdict' object has no attribute 'names'",
    "No attribute 'create_block_manager_from_blocks'",
    "'Styler' object has no attribute '_todo'",
    "'Styler' object has no attribute 'ctx_index'. Did you mean: 'map_index'?",
    "'Styler' object has no attribute 'caption'",
    "'Index' object has no attribute 'categories'",
    "'<' not supported between instances of 'int' and 'Timestamp'",
    "'<=' not supported between instances of 'int' and 'Timestamp'",
    "'>' not supported between instances of 'int' and 'Timestamp'",
    "'>=' not supported between instances of 'int' and 'Timestamp'",
    "'NoneType' object is not callable",
    "'Period' object is not iterable",
    "'property' object is not callable",
    "'quantile' cannot be performed against 'object' dtypes!",
    "<class 'pandas._libs.tslibs.timestamps.Timestamp'> is not convertible to datetime, at position 0",
    "<lambda>() missing 1 required positional argument: 'x'",
    "<lambda>() takes 0 positional arguments but 1 was given",
    "Cannot convert a date of object type",
    "Cannot convert a datetime of object type",
    "Cannot convert a datetime64 of object type",
    "Cannot convert a floating of object type",
    "Cannot convert a integer of object type",
    "Cannot convert tz-naive timestamps, use tz_localize to localize",
    "Cannot interpret 'ListDtype(int64)' as a data type",
    "Cannot interpret 'string[pyarrow]' as a data type",
    "Cannot interpret 'string[python]' as a data type",
    "Expected tuple, got str",
    "Index object is not iterable. Consider using `.to_arrow()`, `.to_pandas()` or `.values_host` if you wish to iterate over the values.",
    "Interval must be an iterable or sequence.",
    "Operation 'bitwise or' not supported between float64 and bool",
    "Timedelta must be an iterable or sequence.",
    "Timestamp must be an iterable or sequence.",
    "Unusable type. Falling back to the slow object",
    "Wrong type ((<class 'numpy.datetime64'>,)) of arguments for cupy_copy",
    "[0] of type <class 'list'> is not a valid type for hashing, must be string or null",
    "an integer is required",
    "bad operand type for abs(): 'NaTType'",
    "boolean value of NA is ambiguous",
    "cannot do slice indexing on DatetimeIndex with these indexers [2000-01-10 00:00:00] of type Timestamp",
    "cannot do slice indexing on DatetimeIndex with these indexers [2014-05-07 00:00:00] of type Timestamp",
    "cannot do slice indexing on DatetimeIndex with these indexers [2015-02-01 00:00:00] of type Timestamp",
    "cannot do slice indexing on DatetimeIndex with these indexers [2017-10-29 02:30:00+02:00] of type Timestamp",
    "cannot do slice indexing on DatetimeIndex with these indexers [2020-01-06 00:00:00] of type Timestamp",
    "cannot do slice indexing on DatetimeIndex with these indexers [2151-06-05 06:32:39.009206272] of type Timestamp",
    "cannot do slice indexing on PeriodIndex with these indexers [2015-02] of type Period",
    "cannot do slice indexing on PeriodIndex with these indexers [2017-12] of type Period",
    "cannot do slice indexing on TimedeltaIndex with these indexers [0 days 00:00:00] of type Timedelta",
    "cannot do slice indexing on TimedeltaIndex with these indexers [0 days 13:00:00] of type Timedelta",
    "cannot do slice indexing on TimedeltaIndex with these indexers [1 days 23:00:00] of type Timedelta",
    "cannot pickle 'module' object",
    "cannot sort an Index object in-place, use sort_values instead",
    "descriptor '__repr__' for 'pandas._libs.tslibs.period._Period' objects doesn't apply to a 'NaTType' object",
    "descriptor '__sub__' requires a 'pandas._libs.tslibs.period._Period' object but received a 'NaTType'",
    "float() argument must be a string or a real number, not 'Timedelta'",
    "float() argument must be a string or a real number, not 'Timestamp'",
    "int() argument must be a string, a bytes-like object or a real number, not 'Period'",
    "isinstance() arg 2 must be a type, a tuple of types, or a union",
    "object type does not support <function GroupBy.quantile.<locals>.func at 0x77b431dfa8e0> operations",
    "only length-1 arrays can be converted to Python scalars",
    "slice indices must be integers or None or have an __index__ method",
    "slice must be an iterable or sequence.",
    "ufunc 'bitwise_or' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''",
    "ufunc 'isnan' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''",
    "unhashable type: 'PeriodDtype'",
    "unsupported operand type(s) for *: 'int' and 'Timestamp'",
    "unsupported operand type(s) for +: 'NaTType' and 'Timestamp'",
    "unsupported operand type(s) for +: 'Timestamp' and 'NaTType'",
    "unsupported operand type(s) for -: 'Timestamp' and 'datetime.datetime'",
    "unsupported operand type(s) for |: 'float' and 'bool'",
    "value should be a 'Timestamp', 'NaT', or array of those. Got category array instead.",
    "Cannot create column with mixed types",
    "Cannot have NaN with string",
    "Cannot have mixed values with boolean",
    "Expected bytes, got a 'bool' object",
    "Expected bytes, got a 'complex' object",
    "Expected bytes, got a 'float' object",
    "Expected bytes, got a 'int' object",
    "Expected bytes, got a 'slice' object",
    "object of type <class 'str'> cannot be converted to int",
    "Length of values (4) does not match length of index (3)",
    "columns length expected 4 but found 2",
    "Shape of passed values is (3, 4), indices imply (3, 2)",
    "cudf does not support object dtype. Use 'str' instead.",
    "('Lengths must match to compare', (2,), (1,))",
    "Duplicate column names are not allowed",
    "setting an array element with a sequence",
    "('Lengths must match to compare', (100,), (1,))",
    "cannot reindex on an axis with duplicate labels",
    "Length of values (1) does not match length of index (2)",
    "Need to pass dtype when passing pd.NA or None",
    "Length of values (2) does not match length of index (3)",
    "`level` must either be a list of names or positions, not a mixture of both.",
    "'exp' is not in list",
    "Categorical categories cannot be null",
    "Categorical categories must be unique",
    "'values' must be a NumPy array, not Index",
    "value must be a scalar",
    "All columns must be of equal length",
    "7 is not in range",
    "operands could not be broadcast together with shapes (4,) (3,)",
    "Length mismatch: Expected axis has 2 elements, new values have 1 elements",
    "Shape of passed values is (3, 1), indices imply (2, 1)",
    "Array conditional must be same shape as self",
    "Could not convert strings to integer type due to presence of non-integer values.",
    "Length of values (3) does not match length of index (4)",
    "Inferred frequency 4D from passed values does not conform to passed frequency D",
    "Cannot index with multidimensional key",
    "Could not convert strings to float type due to presence of non-floating values.",
    "storage_options passed with file object or non-fsspec file path",
    "CategoricalColumns do not use data attribute of Column, use `set_base_children` instead",
    "CUDF failure at: /raid/pgali/cudf/cpp/src/io/comp/uncomp.cpp:432: Failed to parse GZIP header while fetching source properties",
    "CUDF failure at: /raid/pgali/cudf/cpp/src/io/comp/uncomp.cpp:615: Decompression: error in stream",
    "CUDF failure at: /raid/pgali/cudf/cpp/src/io/comp/uncomp.cpp:448: Failed to parse ZIP header while fetching source properties",
    "Resampling by DateOffset objects is not yet supported.",
    "Fast implementation not available. Falling back to the slow implementation",
    "freq is not implemented yet",
    "US/Eastern must be a zoneinfo.ZoneInfo object in pandas_compatible mode.",
    "cuDF does not yet support PeriodDtype",
    "US/Pacific must be a zoneinfo.ZoneInfo object in pandas_compatible mode.",
    "Expected np.datetime64 but got: double",
    "Custom pandas ExtensionDtypes are not supported",
    "not supported",
    "cuDF does not yet support SparseDtype",
    "Expected np.datetime64 but got: duration[ns]",
    "Series with Complex128DType is not supported.",
    "Unsupported column type passed to create an Index: <class 'cudf.core.column.decimal.Decimal128Column'>",
    "Lists concatenation for this operation is not yetsupported",
    "UTC must be a zoneinfo.ZoneInfo object in pandas_compatible mode.",
    "dropna is not currently supported.",
    "database is locked",
    "(sqlite3.OperationalError) database is locked",
    "Option 'chained_assignment' has already been registered",
    "1",
    "dtype('<m8[h]')",
    "dtype('<m8[m]')",
    "'tags'",
    "nan",
    "dtype('>M8[ms]')",
    "'20130903'",
    "'Level exp not found'",
    "'Requested level (ID) does not match index name (None)'",
    "(0, nan)",
    "\"label=Interval(1, 4, closed='right') not in index\"",
    "\"label=Timestamp('2019-01-01 00:00:00') not in index\"",
    "\"label=Timedelta('1 days 00:00:00') not in index\"",
    "7",
    "'Label scalar is out of bounds'",
    "'a'",
    "'_INTERCHANGE_PROTOCOL_BUFFERS'",
    "'Block'",
    "'tar'",
    "'zstd'",
    "ColumnBase are different",
    "Attributes of DataFrame.iloc[:,",
    "Attributes of Series are different",
    "ufunc 'subtract' cannot use operands with types dtype('<M8[s]') and dtype('O')",
    "ufunc 'subtract' cannot use operands with types dtype('<M8[D]') and dtype('O')",
    "ufunc 'positive' did not contain a loop with signature matching types <class 'numpy.dtypes.StrDType'> -> None",
    "ufunc 'subtract' cannot use operands with types dtype('<m8[ns]') and dtype('O')",
    "ufunc 'subtract' cannot use operands with types dtype('<m8') and dtype('O')",
    "ufunc 'subtract' cannot use operands with types dtype('<M8') and dtype('O')",
    "ufunc 'subtract' cannot use operands with types dtype('<m8[h]') and dtype('O')",
    "ufunc 'divide' cannot use operands with types dtype('<m8[ns]') and dtype('O')",
    "ufunc 'divide' cannot use operands with types dtype('<m8[h]') and dtype('O')",
    "ufunc 'divide' cannot use operands with types dtype('<m8') and dtype('O')",
    "ufunc 'remainder' cannot use operands with types dtype('<m8[m]') and dtype('O')",
    "ufunc 'subtract' cannot use operands with types dtype('<M8[ns]') and dtype('O')",
    "ufunc 'subtract' cannot use operands with types dtype('<m8[m]') and dtype('O')",
    "ufunc 'divide' cannot use operands with types dtype('<m8[m]') and dtype('O')",
    "ufunc 'divide' cannot use operands with types dtype('<m8[D]') and dtype('O')",
    "ufunc 'divide' cannot use operands with types dtype('<m8[s]') and dtype('O')",
    "ufunc 'divide' cannot use operands with types dtype('<m8[ms]') and dtype('O')",
    "ufunc 'divide' cannot use operands with types dtype('<m8[us]') and dtype('O')",
    "ufunc 'floor_divide' cannot use operands with types dtype('<m8[ns]') and dtype('O')",
    "ufunc 'remainder' cannot use operands with types dtype('<m8[D]') and dtype('O')",
    "ufunc 'remainder' cannot use operands with types dtype('<m8[h]') and dtype('O')",
    "ufunc 'minimum' did not contain a loop with signature matching types (dtype('<U1'), dtype('<U1')) -> None",
    "(1, 4]",
    "2019-01-01 00:00:00",
    "1 days 00:00:00",
    "(0, 1]",
    "(1, 5]",
    "(1, 3]",
    "2012-01-01 12:12:12",
}


def is_known_error(message):
    return message in ERROR_MESSAGES or any(
        err in message for err in ERROR_MESSAGES
    )


# TODO: Pass these tests with cudf.pandas enabled.
NODEIDS_THAT_FAIL_WITH_CUDF_PANDAS = {
    "tests/extension/test_interval.py::TestIntervalArray::test_is_extension_array_dtype",
    "tests/extension/test_interval.py::TestIntervalArray::test_getitem_scalar",
    "tests/extension/test_interval.py::TestIntervalArray::test_series_constructor",
    "tests/extension/test_interval.py::TestIntervalArray::test_astype_own_type[False]",
    "tests/resample/test_datetime_index.py::test_resample_rounding[ms]",
    "tests/resample/test_datetime_index.py::test_resample_rounding[us]",
    "tests/resample/test_datetime_index.py::test_resample_rounding[ns]",
    "tests/resample/test_datetime_index.py::test_resample_upsampling_picked_but_not_correct[ms]",
    "tests/resample/test_datetime_index.py::test_resample_upsampling_picked_but_not_correct[us]",
    "tests/resample/test_datetime_index.py::test_resample_upsampling_picked_but_not_correct[ns]",
    "tests/computation/test_eval.py::TestOperations::test_query_inplace",
    "tests/test_algos.py::TestFactorize::test_factorize_use_na_sentinel[numpy_array-True]",
    "tests/test_algos.py::TestFactorize::test_factorize_use_na_sentinel[numpy_array-False]",
    "tests/resample/test_datetime_index.py::test_resample_how_method[ms]",
    "tests/resample/test_datetime_index.py::test_resample_how_method[us]",
    "tests/resample/test_datetime_index.py::test_resample_how_method[ns]",
    "tests/test_algos.py::TestUnique::test_order_of_appearance_dt64tz[s]",
    "tests/test_algos.py::TestUnique::test_order_of_appearance_dt64tz[ms]",
    "tests/test_algos.py::TestUnique::test_order_of_appearance_dt64tz[us]",
    "tests/test_algos.py::TestUnique::test_order_of_appearance_dt64tz[ns]",
    "tests/copy_view/test_array.py::test_dataframe_array_ea_dtypes",
    "tests/copy_view/test_array.py::test_dataframe_array_string_dtype",
    "tests/copy_view/test_array.py::test_dataframe_multiple_numpy_dtypes",
    "tests/test_algos.py::TestValueCounts::test_value_counts_nat",
    "tests/copy_view/test_astype.py::test_astype_single_dtype",
    "tests/copy_view/test_astype.py::test_astype_avoids_copy[int64-int64]",
    "tests/copy_view/test_astype.py::test_astype_avoids_copy[int64-Int64]",
    "tests/copy_view/test_astype.py::test_astype_avoids_copy[Int64-int64]",
    "tests/copy_view/test_astype.py::test_astype_avoids_copy[Int64-Int64]",
    "tests/copy_view/test_astype.py::test_astype_avoids_copy[int64[pyarrow]-int64]",
    "tests/copy_view/test_astype.py::test_astype_avoids_copy[int64[pyarrow]-Int64]",
    "tests/copy_view/test_astype.py::test_astype_different_target_dtype[float64]",
    "tests/copy_view/test_astype.py::test_astype_different_target_dtype[int32]",
    "tests/copy_view/test_astype.py::test_astype_different_target_dtype[Int32]",
    "tests/copy_view/test_astype.py::test_astype_different_target_dtype[int32[pyarrow]]",
    "tests/copy_view/test_astype.py::test_astype_string_and_object[object-string]",
    "tests/copy_view/test_astype.py::test_astype_string_and_object[string-object]",
    "tests/copy_view/test_astype.py::test_astype_string_and_object_update_original[object-string]",
    "tests/copy_view/test_astype.py::test_astype_string_and_object_update_original[string-object]",
    "tests/copy_view/test_astype.py::test_astype_dict_dtypes",
    "tests/copy_view/test_astype.py::test_astype_different_datetime_resos",
    "tests/copy_view/test_astype.py::test_convert_dtypes",
    "tests/copy_view/test_chained_assignment_deprecation.py::test_series_setitem[0]",
    "tests/copy_view/test_chained_assignment_deprecation.py::test_series_setitem[indexer1]",
    "tests/copy_view/test_chained_assignment_deprecation.py::test_series_setitem[indexer2]",
    "tests/copy_view/test_chained_assignment_deprecation.py::test_series_setitem[indexer3]",
    "tests/copy_view/test_clip.py::test_clip_inplace_reference",
    "tests/copy_view/test_clip.py::test_clip_inplace_reference_no_op",
    "tests/copy_view/test_clip.py::test_clip_inplace",
    "tests/copy_view/test_clip.py::test_clip",
    "tests/copy_view/test_clip.py::test_clip_no_op",
    "tests/test_algos.py::TestValueCounts::test_value_counts_dropna",
    "tests/copy_view/test_constructors.py::test_dataframe_constructor_mgr_or_df[None-True]",
    "tests/copy_view/test_constructors.py::test_dataframe_constructor_mgr_or_df[None-False]",
    "tests/copy_view/test_constructors.py::test_dataframe_constructor_mgr_or_df[columns1-True]",
    "tests/copy_view/test_constructors.py::test_dataframe_constructor_mgr_or_df[columns1-False]",
    "tests/copy_view/test_constructors.py::test_dataframe_from_dict_of_series[None-None-None]",
    "tests/copy_view/test_constructors.py::test_dataframe_from_dict_of_series[None-None-int64]",
    "tests/copy_view/test_constructors.py::test_dataframe_from_dict_of_series[None-None-Int64]",
    "tests/copy_view/test_constructors.py::test_dataframe_from_dict_of_series[None-index1-None]",
    "tests/copy_view/test_constructors.py::test_dataframe_from_dict_of_series[None-index1-int64]",
    "tests/copy_view/test_constructors.py::test_dataframe_from_dict_of_series[None-index1-Int64]",
    "tests/copy_view/test_constructors.py::test_dataframe_from_dict_of_series[columns1-None-None]",
    "tests/copy_view/test_constructors.py::test_dataframe_from_dict_of_series[columns1-None-int64]",
    "tests/copy_view/test_constructors.py::test_dataframe_from_dict_of_series[columns1-None-Int64]",
    "tests/copy_view/test_constructors.py::test_dataframe_from_dict_of_series[columns1-index1-None]",
    "tests/copy_view/test_constructors.py::test_dataframe_from_dict_of_series[columns1-index1-int64]",
    "tests/copy_view/test_constructors.py::test_dataframe_from_dict_of_series[columns1-index1-Int64]",
    "tests/copy_view/test_constructors.py::test_dataframe_from_dict_of_series[columns2-None-None]",
    "tests/copy_view/test_constructors.py::test_dataframe_from_dict_of_series[columns2-None-int64]",
    "tests/copy_view/test_constructors.py::test_dataframe_from_dict_of_series[columns2-None-Int64]",
    "tests/copy_view/test_constructors.py::test_dataframe_from_dict_of_series[columns2-index1-None]",
    "tests/copy_view/test_constructors.py::test_dataframe_from_dict_of_series[columns2-index1-int64]",
    "tests/copy_view/test_constructors.py::test_dataframe_from_dict_of_series[columns2-index1-Int64]",
    "tests/copy_view/test_constructors.py::test_dataframe_from_dict_of_series_with_reindex[None]",
    "tests/copy_view/test_constructors.py::test_dataframe_from_dict_of_series_with_reindex[int64]",
    "tests/copy_view/test_constructors.py::test_dataframe_from_dict_of_series_with_dtype[None]",
    "tests/copy_view/test_constructors.py::test_dataframe_from_dict_of_series_with_dtype[index1]",
    "tests/copy_view/test_constructors.py::test_dataframe_from_records_with_dataframe",
    "tests/copy_view/test_constructors.py::test_frame_from_dict_of_index",
    "tests/copy_view/test_core_functionalities.py::test_assigning_to_same_variable_removes_references",
    "tests/copy_view/test_core_functionalities.py::test_setitem_dont_track_unnecessary_references",
    "tests/copy_view/test_core_functionalities.py::test_setitem_with_view_copies",
    "tests/copy_view/test_core_functionalities.py::test_setitem_with_view_invalidated_does_not_copy",
    "tests/copy_view/test_functions.py::test_concat_frames",
    "tests/copy_view/test_functions.py::test_concat_frames_updating_input",
    "tests/copy_view/test_functions.py::test_concat_series",
    "tests/copy_view/test_functions.py::test_concat_frames_chained",
    "tests/copy_view/test_functions.py::test_concat_series_chained",
    "tests/copy_view/test_functions.py::test_concat_series_updating_input",
    "tests/copy_view/test_functions.py::test_concat_mixed_series_frame",
    "tests/copy_view/test_functions.py::test_concat_copy_keyword[True]",
    "tests/copy_view/test_functions.py::test_concat_copy_keyword[None]",
    "tests/copy_view/test_functions.py::test_concat_copy_keyword[False]",
    "tests/copy_view/test_functions.py::test_merge_on_key[<lambda>0]",
    "tests/copy_view/test_functions.py::test_merge_on_key[<lambda>1]",
    "tests/copy_view/test_functions.py::test_merge_on_index",
    "tests/copy_view/test_functions.py::test_merge_on_key_enlarging_one[<lambda>-right]",
    "tests/copy_view/test_functions.py::test_merge_on_key_enlarging_one[<lambda>-left]",
    "tests/copy_view/test_functions.py::test_merge_copy_keyword[True]",
    "tests/copy_view/test_functions.py::test_merge_copy_keyword[None]",
    "tests/copy_view/test_functions.py::test_merge_copy_keyword[False]",
    "tests/copy_view/test_functions.py::test_join_on_key",
    "tests/copy_view/test_functions.py::test_join_multiple_dataframes_on_key",
    "tests/copy_view/test_indexing.py::test_subset_column_selection[numpy]",
    "tests/copy_view/test_indexing.py::test_subset_column_selection[nullable]",
    "tests/copy_view/test_indexing.py::test_subset_column_selection_modify_parent[numpy]",
    "tests/copy_view/test_indexing.py::test_subset_column_selection_modify_parent[nullable]",
    "tests/copy_view/test_indexing.py::test_subset_row_slice[numpy]",
    "tests/copy_view/test_indexing.py::test_subset_row_slice[nullable]",
    "tests/test_downstream.py::test_yaml_dump",
    "tests/copy_view/test_indexing.py::test_subset_set_columns[nullable-mixed-block]",
    "tests/resample/test_datetime_index.py::test_resample_median_bug_1688[s-int64]",
    "tests/copy_view/test_indexing.py::test_del_frame[numpy]",
    "tests/copy_view/test_indexing.py::test_del_frame[nullable]",
    "tests/copy_view/test_indexing.py::test_column_as_series[numpy]",
    "tests/copy_view/test_indexing.py::test_column_as_series[nullable]",
    "tests/resample/test_datetime_index.py::test_resample_median_bug_1688[s-int32]",
    "tests/resample/test_datetime_index.py::test_resample_median_bug_1688[s-float64]",
    "tests/copy_view/test_indexing.py::test_dataframe_add_column_from_series[numpy]",
    "tests/copy_view/test_indexing.py::test_dataframe_add_column_from_series[nullable]",
    "tests/copy_view/test_indexing.py::test_set_value_copy_only_necessary_column[mixed-block-loc-indexer0-100]",
    "tests/copy_view/test_indexing.py::test_set_value_copy_only_necessary_column[mixed-block-loc-indexer0-a]",
    "tests/copy_view/test_indexing.py::test_set_value_copy_only_necessary_column[mixed-block-iloc-indexer1-100]",
    "tests/copy_view/test_indexing.py::test_set_value_copy_only_necessary_column[mixed-block-iloc-indexer1-a]",
    "tests/copy_view/test_indexing.py::test_set_value_copy_only_necessary_column[mixed-block-loc-indexer2-100]",
    "tests/copy_view/test_indexing.py::test_set_value_copy_only_necessary_column[mixed-block-loc-indexer2-a]",
    "tests/copy_view/test_indexing.py::test_set_value_copy_only_necessary_column[mixed-block-iloc-indexer3-100]",
    "tests/copy_view/test_indexing.py::test_set_value_copy_only_necessary_column[mixed-block-iloc-indexer3-a]",
    "tests/copy_view/test_indexing.py::test_set_value_copy_only_necessary_column[mixed-block-loc-indexer4-100]",
    "tests/copy_view/test_indexing.py::test_set_value_copy_only_necessary_column[mixed-block-loc-indexer4-a]",
    "tests/copy_view/test_indexing.py::test_set_value_copy_only_necessary_column[mixed-block-iloc-indexer5-100]",
    "tests/copy_view/test_indexing.py::test_set_value_copy_only_necessary_column[mixed-block-iloc-indexer5-a]",
    "tests/copy_view/test_indexing.py::test_set_value_copy_only_necessary_column[single-block-loc-indexer0-100]",
    "tests/copy_view/test_indexing.py::test_set_value_copy_only_necessary_column[single-block-loc-indexer0-a]",
    "tests/copy_view/test_indexing.py::test_set_value_copy_only_necessary_column[single-block-iloc-indexer1-100]",
    "tests/copy_view/test_indexing.py::test_set_value_copy_only_necessary_column[single-block-iloc-indexer1-a]",
    "tests/copy_view/test_indexing.py::test_set_value_copy_only_necessary_column[single-block-loc-indexer2-100]",
    "tests/copy_view/test_indexing.py::test_set_value_copy_only_necessary_column[single-block-loc-indexer2-a]",
    "tests/copy_view/test_indexing.py::test_set_value_copy_only_necessary_column[single-block-iloc-indexer3-100]",
    "tests/copy_view/test_indexing.py::test_set_value_copy_only_necessary_column[single-block-iloc-indexer3-a]",
    "tests/resample/test_datetime_index.py::test_resample_median_bug_1688[ms-int64]",
    "tests/copy_view/test_indexing.py::test_set_value_copy_only_necessary_column[single-block-loc-indexer4-100]",
    "tests/copy_view/test_indexing.py::test_set_value_copy_only_necessary_column[single-block-loc-indexer4-a]",
    "tests/copy_view/test_indexing.py::test_set_value_copy_only_necessary_column[single-block-iloc-indexer5-100]",
    "tests/copy_view/test_indexing.py::test_set_value_copy_only_necessary_column[single-block-iloc-indexer5-a]",
    "tests/copy_view/test_indexing.py::test_getitem_midx_slice",
    "tests/resample/test_datetime_index.py::test_resample_median_bug_1688[ms-int32]",
    "tests/copy_view/test_indexing.py::test_loc_enlarging_with_dataframe",
    "tests/copy_view/test_internals.py::test_iset_splits_blocks_inplace[locs0-arr0-int64]",
    "tests/copy_view/test_internals.py::test_iset_splits_blocks_inplace[locs0-arr0-int8]",
    "tests/copy_view/test_internals.py::test_iset_splits_blocks_inplace[locs1-arr1-int64]",
    "tests/resample/test_datetime_index.py::test_resample_median_bug_1688[ms-float64]",
    "tests/copy_view/test_internals.py::test_iset_splits_blocks_inplace[locs1-arr1-int8]",
    "tests/copy_view/test_internals.py::test_iset_splits_blocks_inplace[locs2-arr2-int64]",
    "tests/copy_view/test_internals.py::test_iset_splits_blocks_inplace[locs2-arr2-int8]",
    "tests/copy_view/test_internals.py::test_iset_splits_blocks_inplace[locs3-arr3-int64]",
    "tests/copy_view/test_internals.py::test_iset_splits_blocks_inplace[locs3-arr3-int8]",
    "tests/copy_view/test_internals.py::test_iset_splits_blocks_inplace[locs4-arr4-int64]",
    "tests/copy_view/test_internals.py::test_iset_splits_blocks_inplace[locs4-arr4-int8]",
    "tests/copy_view/test_internals.py::test_iset_splits_blocks_inplace[locs5-arr5-int64]",
    "tests/copy_view/test_internals.py::test_iset_splits_blocks_inplace[locs5-arr5-int8]",
    "tests/copy_view/test_internals.py::test_iset_splits_blocks_inplace[locs6-arr6-int64]",
    "tests/copy_view/test_internals.py::test_iset_splits_blocks_inplace[locs6-arr6-int8]",
    "tests/copy_view/test_internals.py::test_iset_splits_blocks_inplace[locs7-arr7-int64]",
    "tests/copy_view/test_internals.py::test_iset_splits_blocks_inplace[locs7-arr7-int8]",
    "tests/copy_view/test_internals.py::test_iset_splits_blocks_inplace[locs8-arr8-int64]",
    "tests/copy_view/test_internals.py::test_iset_splits_blocks_inplace[locs8-arr8-int8]",
    "tests/copy_view/test_interp_fillna.py::test_interpolate_no_op[pad]",
    "tests/copy_view/test_interp_fillna.py::test_interpolate_no_op[nearest]",
    "tests/copy_view/test_interp_fillna.py::test_interpolate_no_op[linear]",
    "tests/copy_view/test_interp_fillna.py::test_interp_fill_functions[ffill]",
    "tests/copy_view/test_interp_fillna.py::test_interp_fill_functions[bfill]",
    "tests/copy_view/test_interp_fillna.py::test_interpolate_triggers_copy[vals0-ffill]",
    "tests/copy_view/test_interp_fillna.py::test_interpolate_triggers_copy[vals0-bfill]",
    "tests/copy_view/test_interp_fillna.py::test_interpolate_triggers_copy[vals1-ffill]",
    "tests/copy_view/test_interp_fillna.py::test_interpolate_triggers_copy[vals1-bfill]",
    "tests/copy_view/test_interp_fillna.py::test_interpolate_inplace_no_reference_no_copy[vals0]",
    "tests/copy_view/test_interp_fillna.py::test_interpolate_inplace_no_reference_no_copy[vals1]",
    "tests/copy_view/test_interp_fillna.py::test_interpolate_inplace_with_refs[vals0]",
    "tests/resample/test_datetime_index.py::test_resample_median_bug_1688[us-int64]",
    "tests/copy_view/test_interp_fillna.py::test_interpolate_inplace_with_refs[vals1]",
    "tests/copy_view/test_interp_fillna.py::test_interp_fill_functions_inplace[float64-ffill]",
    "tests/copy_view/test_interp_fillna.py::test_interp_fill_functions_inplace[float64-bfill]",
    "tests/copy_view/test_interp_fillna.py::test_interp_fill_functions_inplace[Float64-ffill]",
    "tests/copy_view/test_interp_fillna.py::test_interp_fill_functions_inplace[Float64-bfill]",
    "tests/copy_view/test_interp_fillna.py::test_interpolate_cleaned_fill_method",
    "tests/copy_view/test_interp_fillna.py::test_interpolate_object_convert_no_op",
    "tests/copy_view/test_interp_fillna.py::test_interpolate_object_convert_copies",
    "tests/copy_view/test_interp_fillna.py::test_interpolate_downcast",
    "tests/copy_view/test_interp_fillna.py::test_interpolate_downcast_reference_triggers_copy",
    "tests/copy_view/test_interp_fillna.py::test_fillna",
    "tests/copy_view/test_interp_fillna.py::test_fillna_dict",
    "tests/copy_view/test_interp_fillna.py::test_fillna_inplace[None]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_inplace[False]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_inplace_reference",
    "tests/copy_view/test_interp_fillna.py::test_fillna_ea_noop_shares_memory[UInt8]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_ea_noop_shares_memory[UInt16]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_ea_noop_shares_memory[UInt32]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_ea_noop_shares_memory[UInt64]",
    "tests/resample/test_datetime_index.py::test_resample_median_bug_1688[us-int32]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_ea_noop_shares_memory[Int8]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_ea_noop_shares_memory[Int16]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_ea_noop_shares_memory[Int32]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_ea_noop_shares_memory[Int64]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_ea_noop_shares_memory[Float32]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_ea_noop_shares_memory[Float64]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_ea_noop_shares_memory[uint8[pyarrow]]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_ea_noop_shares_memory[uint16[pyarrow]]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_ea_noop_shares_memory[uint32[pyarrow]]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_ea_noop_shares_memory[uint64[pyarrow]]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_ea_noop_shares_memory[int8[pyarrow]]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_ea_noop_shares_memory[int16[pyarrow]]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_ea_noop_shares_memory[int32[pyarrow]]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_ea_noop_shares_memory[int64[pyarrow]]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_ea_noop_shares_memory[float[pyarrow]]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_ea_noop_shares_memory[double[pyarrow]]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_inplace_ea_noop_shares_memory[UInt8]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_inplace_ea_noop_shares_memory[UInt16]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_inplace_ea_noop_shares_memory[UInt32]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_inplace_ea_noop_shares_memory[UInt64]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_inplace_ea_noop_shares_memory[Int8]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_inplace_ea_noop_shares_memory[Int16]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_inplace_ea_noop_shares_memory[Int32]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_inplace_ea_noop_shares_memory[Int64]",
    "tests/resample/test_datetime_index.py::test_resample_median_bug_1688[us-float64]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_inplace_ea_noop_shares_memory[Float32]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_inplace_ea_noop_shares_memory[Float64]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_inplace_ea_noop_shares_memory[uint8[pyarrow]]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_inplace_ea_noop_shares_memory[uint16[pyarrow]]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_inplace_ea_noop_shares_memory[uint32[pyarrow]]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_inplace_ea_noop_shares_memory[uint64[pyarrow]]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_inplace_ea_noop_shares_memory[int8[pyarrow]]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_inplace_ea_noop_shares_memory[int16[pyarrow]]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_inplace_ea_noop_shares_memory[int32[pyarrow]]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_inplace_ea_noop_shares_memory[int64[pyarrow]]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_inplace_ea_noop_shares_memory[float[pyarrow]]",
    "tests/copy_view/test_interp_fillna.py::test_fillna_inplace_ea_noop_shares_memory[double[pyarrow]]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[rename-True]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[rename-None]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[rename-False]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[reindex-True]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[reindex-None]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[reindex-False]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[reindex_like-True]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[reindex_like-None]",
    "tests/resample/test_datetime_index.py::test_resample_median_bug_1688[ns-int64]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[reindex_like-False]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[align-True]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[align-None]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[align-False]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[set_axis-True]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[set_axis-None]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[set_axis-False]",
    "tests/resample/test_datetime_index.py::test_resample_median_bug_1688[ns-int32]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[rename_axis0-True]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[rename_axis0-None]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[rename_axis0-False]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[rename_axis1-True]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[rename_axis1-None]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[rename_axis1-False]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[astype-True]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[astype-None]",
    "tests/resample/test_datetime_index.py::test_resample_median_bug_1688[ns-float64]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[astype-False]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[swapaxes-True]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[swapaxes-None]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[swapaxes-False]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[truncate-True]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[truncate-None]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[truncate-False]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[infer_objects-True]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[infer_objects-None]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[infer_objects-False]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[to_timestamp-True]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[to_timestamp-None]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[to_timestamp-False]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[to_period-True]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[to_period-None]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[to_period-False]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[tz_localize-True]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[tz_localize-None]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[tz_localize-False]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[tz_convert-True]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[tz_convert-None]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[tz_convert-False]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[set_flags-True]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[set_flags-None]",
    "tests/copy_view/test_methods.py::test_methods_copy_keyword[set_flags-False]",
    "tests/copy_view/test_methods.py::test_transpose_copy_keyword[True]",
    "tests/copy_view/test_methods.py::test_transpose_copy_keyword[None]",
    "tests/copy_view/test_methods.py::test_transpose_copy_keyword[False]",
    "tests/copy_view/test_methods.py::test_reset_index",
    "tests/copy_view/test_methods.py::test_rename_columns",
    "tests/copy_view/test_methods.py::test_rename_columns_modify_parent",
    "tests/copy_view/test_methods.py::test_pipe",
    "tests/copy_view/test_methods.py::test_pipe_modify_df",
    "tests/copy_view/test_methods.py::test_reindex_columns",
    "tests/copy_view/test_methods.py::test_reindex_rows[identical]",
    "tests/copy_view/test_methods.py::test_reindex_rows[view]",
    "tests/copy_view/test_methods.py::test_reindex_rows[copy]",
    "tests/copy_view/test_methods.py::test_reindex_rows[values]",
    "tests/copy_view/test_methods.py::test_drop_on_column",
    "tests/copy_view/test_methods.py::test_select_dtypes",
    "tests/copy_view/test_methods.py::test_filter[filter_kwargs0]",
    "tests/copy_view/test_methods.py::test_filter[filter_kwargs1]",
    "tests/copy_view/test_methods.py::test_filter[filter_kwargs2]",
    "tests/copy_view/test_methods.py::test_shift_no_op",
    "tests/copy_view/test_methods.py::test_shift_index",
    "tests/copy_view/test_methods.py::test_shift_rows_freq",
    "tests/copy_view/test_methods.py::test_pop",
    "tests/copy_view/test_methods.py::test_align_frame[<lambda>0]",
    "tests/copy_view/test_methods.py::test_align_frame[<lambda>1]",
    "tests/copy_view/test_methods.py::test_align_frame[<lambda>2]",
    "tests/copy_view/test_methods.py::test_align_copy_false",
    "tests/copy_view/test_methods.py::test_align_with_series_copy_false",
    "tests/copy_view/test_methods.py::test_to_frame",
    "tests/copy_view/test_methods.py::test_swapaxes_noop[index]",
    "tests/copy_view/test_methods.py::test_swapaxes_noop[columns]",
    "tests/copy_view/test_methods.py::test_swapaxes_single_block",
    "tests/copy_view/test_methods.py::test_to_timestamp[obj1]",
    "tests/copy_view/test_methods.py::test_to_period[obj1]",
    "tests/copy_view/test_methods.py::test_set_index",
    "tests/copy_view/test_methods.py::test_add_prefix",
    "tests/copy_view/test_methods.py::test_add_suffix",
    "tests/copy_view/test_methods.py::test_dropna[0-5.5]",
    "tests/copy_view/test_methods.py::test_dropna[1-nan]",
    "tests/copy_view/test_methods.py::test_head_tail[<lambda>0]",
    "tests/copy_view/test_methods.py::test_head_tail[<lambda>1]",
    "tests/copy_view/test_methods.py::test_head_tail[<lambda>2]",
    "tests/copy_view/test_methods.py::test_head_tail[<lambda>3]",
    "tests/copy_view/test_methods.py::test_infer_objects",
    "tests/copy_view/test_methods.py::test_infer_objects_no_reference",
    "tests/copy_view/test_methods.py::test_infer_objects_reference",
    "tests/copy_view/test_methods.py::test_truncate[kwargs0]",
    "tests/copy_view/test_methods.py::test_truncate[kwargs1]",
    "tests/copy_view/test_methods.py::test_assign_drop_duplicates[assign]",
    "tests/copy_view/test_methods.py::test_assign_drop_duplicates[drop_duplicates]",
    "tests/resample/test_datetime_index.py::test_resample_group_info[ms-10-10000]",
    "tests/resample/test_datetime_index.py::test_resample_group_info[ms-10-100000]",
    "tests/resample/test_datetime_index.py::test_resample_group_info[ms-100-10000]",
    "tests/copy_view/test_methods.py::test_reindex_like",
    "tests/copy_view/test_methods.py::test_sort_values[obj1-kwargs1]",
    "tests/copy_view/test_methods.py::test_sort_values_inplace[obj1-kwargs1]",
    "tests/copy_view/test_methods.py::test_round[-1]",
    "tests/resample/test_datetime_index.py::test_resample_group_info[ms-100-100000]",
    "tests/copy_view/test_methods.py::test_round[0]",
    "tests/copy_view/test_methods.py::test_round[1]",
    "tests/copy_view/test_methods.py::test_reorder_levels",
    "tests/copy_view/test_methods.py::test_frame_set_axis",
    "tests/copy_view/test_methods.py::test_rename_axis[kwargs0]",
    "tests/copy_view/test_methods.py::test_rename_axis[kwargs1]",
    "tests/resample/test_datetime_index.py::test_resample_group_info[ms-1000-10000]",
    "tests/copy_view/test_methods.py::test_droplevel",
    "tests/copy_view/test_methods.py::test_squeeze",
    "tests/copy_view/test_methods.py::test_items",
    "tests/copy_view/test_methods.py::test_putmask[int64]",
    "tests/copy_view/test_methods.py::test_putmask[Int64]",
    "tests/copy_view/test_methods.py::test_putmask_no_reference[int64]",
    "tests/copy_view/test_methods.py::test_putmask_no_reference[Int64]",
    "tests/copy_view/test_methods.py::test_putmask_aligns_rhs_no_reference[float64]",
    "tests/copy_view/test_methods.py::test_putmask_aligns_rhs_no_reference[Float64]",
    "tests/resample/test_datetime_index.py::test_resample_group_info[ms-1000-100000]",
    "tests/copy_view/test_methods.py::test_putmask_dont_copy_some_blocks[5-False-None]",
    "tests/copy_view/test_methods.py::test_where_mask_noop_on_single_column[<lambda>0-int64-10.5]",
    "tests/copy_view/test_methods.py::test_where_mask_noop_on_single_column[<lambda>0-Int64-10]",
    "tests/copy_view/test_methods.py::test_where_mask_noop_on_single_column[<lambda>1-int64-10.5]",
    "tests/copy_view/test_methods.py::test_where_mask_noop_on_single_column[<lambda>1-Int64-10]",
    "tests/copy_view/test_methods.py::test_asfreq_noop",
    "tests/copy_view/test_methods.py::test_isetitem",
    "tests/copy_view/test_methods.py::test_isetitem_frame",
    "tests/copy_view/test_methods.py::test_xs[single-block-0-0]",
    "tests/copy_view/test_methods.py::test_xs[single-block-1-a]",
    "tests/copy_view/test_methods.py::test_xs[mixed-block-1-a]",
    "tests/copy_view/test_methods.py::test_xs_multiindex[l1-0-0]",
    "tests/resample/test_datetime_index.py::test_resample_group_info[us-10-10000]",
    "tests/copy_view/test_methods.py::test_xs_multiindex[l1-0-1]",
    "tests/resample/test_datetime_index.py::test_resample_group_info[us-10-100000]",
    "tests/copy_view/test_methods.py::test_transpose[True]",
    "tests/copy_view/test_methods.py::test_transpose[False]",
    "tests/copy_view/test_methods.py::test_transpose_different_dtypes",
    "tests/copy_view/test_methods.py::test_transpose_ea_single_column",
    "tests/resample/test_datetime_index.py::test_resample_group_info[us-100-10000]",
    "tests/copy_view/test_methods.py::test_insert_series",
    "tests/copy_view/test_methods.py::test_eval",
    "tests/resample/test_datetime_index.py::test_resample_group_info[us-100-100000]",
    "tests/copy_view/test_methods.py::test_eval_inplace",
    "tests/resample/test_datetime_index.py::test_resample_group_info[us-1000-10000]",
    "tests/copy_view/test_replace.py::test_replace[replace_kwargs0]",
    "tests/copy_view/test_replace.py::test_replace[replace_kwargs1]",
    "tests/copy_view/test_replace.py::test_replace_regex_inplace_refs",
    "tests/copy_view/test_replace.py::test_replace_regex_inplace",
    "tests/copy_view/test_replace.py::test_replace_regex_inplace_no_op",
    "tests/copy_view/test_replace.py::test_replace_mask_all_false_second_block",
    "tests/copy_view/test_replace.py::test_replace_coerce_single_column",
    "tests/copy_view/test_replace.py::test_replace_to_replace_wrong_dtype",
    "tests/copy_view/test_replace.py::test_replace_list_categorical",
    "tests/copy_view/test_replace.py::test_replace_list_inplace_refs_categorical",
    "tests/copy_view/test_replace.py::test_replace_inplace[1.5]",
    "tests/copy_view/test_replace.py::test_replace_inplace[to_replace1]",
    "tests/copy_view/test_replace.py::test_replace_inplace[to_replace2]",
    "tests/copy_view/test_replace.py::test_replace_inplace_reference[1.5]",
    "tests/copy_view/test_replace.py::test_replace_inplace_reference[to_replace1]",
    "tests/copy_view/test_replace.py::test_replace_inplace_reference_no_op[a]",
    "tests/copy_view/test_replace.py::test_replace_inplace_reference_no_op[100.5]",
    "tests/copy_view/test_replace.py::test_replace_categorical_inplace_reference[1-1]",
    "tests/copy_view/test_replace.py::test_replace_categorical_inplace_reference[1-to_replace1]",
    "tests/copy_view/test_replace.py::test_replace_categorical_inplace_reference[1.5-1]",
    "tests/copy_view/test_replace.py::test_replace_categorical_inplace_reference[1.5-to_replace1]",
    "tests/copy_view/test_replace.py::test_replace_categorical_inplace[1]",
    "tests/copy_view/test_replace.py::test_replace_categorical_inplace[1.5]",
    "tests/resample/test_datetime_index.py::test_resample_group_info[us-1000-100000]",
    "tests/copy_view/test_replace.py::test_replace_categorical[1]",
    "tests/copy_view/test_replace.py::test_replace_categorical[1.5]",
    "tests/copy_view/test_replace.py::test_masking_inplace[where]",
    "tests/copy_view/test_replace.py::test_masking_inplace[mask]",
    "tests/copy_view/test_replace.py::test_replace_empty_list",
    "tests/copy_view/test_replace.py::test_replace_object_list_inplace[d]",
    "tests/copy_view/test_replace.py::test_replace_object_list_inplace[None]",
    "tests/copy_view/test_replace.py::test_replace_list_multiple_elements_inplace",
    "tests/copy_view/test_replace.py::test_replace_list_none",
    "tests/copy_view/test_replace.py::test_replace_list_none_inplace_refs",
    "tests/copy_view/test_replace.py::test_replace_listlike",
    "tests/copy_view/test_replace.py::test_replace_listlike_inplace",
    "tests/copy_view/test_setitem.py::test_set_column_with_array",
    "tests/copy_view/test_setitem.py::test_set_column_with_series",
    "tests/copy_view/test_setitem.py::test_set_column_with_index",
    "tests/copy_view/test_setitem.py::test_set_columns_with_dataframe",
    "tests/resample/test_datetime_index.py::test_resample_group_info[ns-10-10000]",
    "tests/copy_view/test_util.py::test_get_array_numpy",
    "tests/copy_view/test_util.py::test_get_array_masked",
    "tests/resample/test_datetime_index.py::test_resample_group_info[ns-10-100000]",
    "tests/copy_view/index/test_index.py::test_index_to_frame",
    "tests/resample/test_datetime_index.py::test_resample_group_info[ns-100-10000]",
    "tests/resample/test_datetime_index.py::test_resample_group_info[ns-100-100000]",
    "tests/resample/test_datetime_index.py::test_resample_group_info[ns-1000-10000]",
    "tests/dtypes/test_dtypes.py::TestIntervalDtype::test_unpickling_without_closed",
    "tests/resample/test_datetime_index.py::test_resample_group_info[ns-1000-100000]",
    "tests/extension/test_masked.py::TestMaskedArrays::test_is_extension_array_dtype[Int8Dtype]",
    "tests/extension/test_masked.py::TestMaskedArrays::test_is_extension_array_dtype[Int16Dtype]",
    "tests/extension/test_masked.py::TestMaskedArrays::test_is_extension_array_dtype[Int32Dtype]",
    "tests/extension/test_masked.py::TestMaskedArrays::test_is_extension_array_dtype[Int64Dtype]",
    "tests/extension/test_masked.py::TestMaskedArrays::test_is_extension_array_dtype[UInt8Dtype]",
    "tests/extension/test_masked.py::TestMaskedArrays::test_is_extension_array_dtype[UInt16Dtype]",
    "tests/extension/test_masked.py::TestMaskedArrays::test_is_extension_array_dtype[UInt32Dtype]",
    "tests/extension/test_masked.py::TestMaskedArrays::test_is_extension_array_dtype[UInt64Dtype]",
    "tests/extension/test_masked.py::TestMaskedArrays::test_is_extension_array_dtype[Float32Dtype]",
    "tests/extension/test_masked.py::TestMaskedArrays::test_is_extension_array_dtype[Float64Dtype]",
    "tests/extension/test_masked.py::TestMaskedArrays::test_is_extension_array_dtype[BooleanDtype]",
    "tests/dtypes/test_generic.py::test_setattr_warnings",
    "tests/resample/test_datetime_index.py::test_resample_datetime_values[s]",
    "tests/resample/test_datetime_index.py::test_resample_datetime_values[ms]",
    "tests/resample/test_datetime_index.py::test_resample_datetime_values[us]",
    "tests/resample/test_datetime_index.py::test_resample_datetime_values[ns]",
    "tests/resample/test_datetime_index.py::test_resample_unsigned_int[uint8-s]",
    "tests/resample/test_datetime_index.py::test_resample_unsigned_int[uint8-ms]",
    "tests/resample/test_datetime_index.py::test_resample_unsigned_int[uint8-us]",
    "tests/resample/test_datetime_index.py::test_resample_unsigned_int[uint8-ns]",
    "tests/resample/test_datetime_index.py::test_resample_unsigned_int[uint16-s]",
    "tests/resample/test_datetime_index.py::test_resample_unsigned_int[uint16-ms]",
    "tests/resample/test_datetime_index.py::test_resample_unsigned_int[uint16-us]",
    "tests/resample/test_datetime_index.py::test_resample_unsigned_int[uint16-ns]",
    "tests/resample/test_datetime_index.py::test_resample_unsigned_int[uint32-s]",
    "tests/resample/test_datetime_index.py::test_resample_unsigned_int[uint32-ms]",
    "tests/resample/test_datetime_index.py::test_resample_unsigned_int[uint32-us]",
    "tests/resample/test_datetime_index.py::test_resample_unsigned_int[uint32-ns]",
    "tests/resample/test_datetime_index.py::test_resample_unsigned_int[uint64-s]",
    "tests/resample/test_datetime_index.py::test_resample_unsigned_int[uint64-ms]",
    "tests/resample/test_datetime_index.py::test_resample_unsigned_int[uint64-us]",
    "tests/resample/test_datetime_index.py::test_resample_unsigned_int[uint64-ns]",
    "tests/extension/test_masked.py::TestMaskedArrays::test_series_constructor[Int8Dtype]",
    "tests/extension/test_masked.py::TestMaskedArrays::test_series_constructor[Int16Dtype]",
    "tests/extension/test_masked.py::TestMaskedArrays::test_series_constructor[Int32Dtype]",
    "tests/extension/test_masked.py::TestMaskedArrays::test_series_constructor[Int64Dtype]",
    "tests/extension/test_masked.py::TestMaskedArrays::test_series_constructor[UInt8Dtype]",
    "tests/extension/test_masked.py::TestMaskedArrays::test_series_constructor[UInt16Dtype]",
    "tests/extension/test_masked.py::TestMaskedArrays::test_series_constructor[UInt32Dtype]",
    "tests/extension/test_masked.py::TestMaskedArrays::test_series_constructor[UInt64Dtype]",
    "tests/extension/test_masked.py::TestMaskedArrays::test_series_constructor[Float32Dtype]",
    "tests/extension/test_masked.py::TestMaskedArrays::test_series_constructor[Float64Dtype]",
    "tests/extension/test_masked.py::TestMaskedArrays::test_series_constructor[BooleanDtype]",
    "tests/extension/test_masked.py::TestMaskedArrays::test_astype_own_type[Int8Dtype-False]",
    "tests/extension/test_masked.py::TestMaskedArrays::test_astype_own_type[Int16Dtype-False]",
    "tests/extension/test_masked.py::TestMaskedArrays::test_astype_own_type[Int32Dtype-False]",
    "tests/extension/test_masked.py::TestMaskedArrays::test_astype_own_type[Int64Dtype-False]",
    "tests/extension/test_masked.py::TestMaskedArrays::test_astype_own_type[UInt8Dtype-False]",
    "tests/extension/test_masked.py::TestMaskedArrays::test_astype_own_type[UInt16Dtype-False]",
    "tests/extension/test_masked.py::TestMaskedArrays::test_astype_own_type[UInt32Dtype-False]",
    "tests/extension/test_masked.py::TestMaskedArrays::test_astype_own_type[UInt64Dtype-False]",
    "tests/extension/test_masked.py::TestMaskedArrays::test_astype_own_type[Float32Dtype-False]",
    "tests/extension/test_masked.py::TestMaskedArrays::test_astype_own_type[Float64Dtype-False]",
    "tests/extension/test_masked.py::TestMaskedArrays::test_astype_own_type[BooleanDtype-False]",
    "tests/resample/test_period_index.py::TestPeriodIndex::test_resample_tz_localized[ms]",
    "tests/resample/test_period_index.py::TestPeriodIndex::test_resample_tz_localized[us]",
    "tests/resample/test_period_index.py::TestPeriodIndex::test_resample_tz_localized[ns]",
    "tests/resample/test_period_index.py::TestPeriodIndex::test_evenly_divisible_with_no_extra_bins2",
    "tests/resample/test_resample_api.py::test_combined_up_downsampling_of_irregular",
    "tests/resample/test_resample_api.py::test_agg_mixed_column_aggregation[df_resample]",
    "tests/resample/test_resample_api.py::test_agg_mixed_column_aggregation[df_col_resample]",
    "tests/resample/test_resample_api.py::test_agg_mixed_column_aggregation[df_grouper_resample]",
    "tests/resample/test_resample_api.py::test_agg_both_mean_std_named_result[df_resample-agg0]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_setitem_frame_2d_values[float]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_setitem_frame_2d_values[object]",
    "tests/resample/test_resample_api.py::test_agg_both_mean_std_named_result[df_resample-agg1]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_concat[float-True]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_concat[float-False]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_concat[object-True]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_concat[object-False]",
    "tests/resample/test_resample_api.py::test_agg_both_mean_std_named_result[df_resample-agg2]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_set_frame_overwrite_object[float]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_set_frame_overwrite_object[object]",
    "tests/resample/test_resample_api.py::test_agg_both_mean_std_named_result[df_col_resample-agg0]",
    "tests/resample/test_resample_api.py::test_agg_both_mean_std_named_result[df_col_resample-agg1]",
    "tests/resample/test_resample_api.py::test_agg_both_mean_std_named_result[df_col_resample-agg2]",
    "tests/resample/test_resample_api.py::test_agg_both_mean_std_named_result[df_mult_resample-agg0]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_unstack[float-series-index2]",
    "tests/resample/test_resample_api.py::test_agg_both_mean_std_named_result[df_mult_resample-agg1]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_unstack[float-series-index3]",
    "tests/resample/test_resample_api.py::test_agg_both_mean_std_named_result[df_mult_resample-agg2]",
    "tests/resample/test_resample_api.py::test_agg_both_mean_std_named_result[df_grouper_resample-agg0]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_unstack[float-frame-index2]",
    "tests/resample/test_resample_api.py::test_agg_both_mean_sum[df_resample-agg1]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_unstack[float-frame-index3]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_unstack[object-series-index0]",
    "tests/resample/test_resample_api.py::test_agg_both_mean_sum[df_col_resample-agg1]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_unstack[object-series-index2]",
    "tests/resample/test_resample_api.py::test_agg_both_mean_sum[df_mult_resample-agg1]",
    "tests/resample/test_resample_api.py::test_agg_both_mean_sum[df_grouper_resample-agg1]",
    "tests/resample/test_resample_api.py::test_agg_with_lambda[df_resample-agg0]",
    "tests/resample/test_resample_api.py::test_agg_with_lambda[df_resample-agg1]",
    "tests/resample/test_resample_api.py::test_agg_with_lambda[df_resample-agg2]",
    "tests/resample/test_resample_api.py::test_agg_with_lambda[df_col_resample-agg0]",
    "tests/resample/test_resample_api.py::test_agg_with_lambda[df_col_resample-agg1]",
    "tests/resample/test_resample_api.py::test_agg_with_lambda[df_col_resample-agg2]",
    "tests/extension/test_arrow.py::TestArrowArray::test_unstack[decimal128(7, 3)-series-index0]",
    "tests/extension/test_arrow.py::TestArrowArray::test_unstack[decimal128(7, 3)-series-index1]",
    "tests/extension/test_arrow.py::TestArrowArray::test_unstack[decimal128(7, 3)-series-index2]",
    "tests/extension/test_arrow.py::TestArrowArray::test_unstack[decimal128(7, 3)-series-index3]",
    "tests/resample/test_resample_api.py::test_agg_with_lambda[df_mult_resample-agg0]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_series_repr[object]",
    "tests/resample/test_resample_api.py::test_agg_with_lambda[df_mult_resample-agg1]",
    "tests/resample/test_resample_api.py::test_agg_with_lambda[df_mult_resample-agg2]",
    "tests/resample/test_resample_api.py::test_agg_with_lambda[df_grouper_resample-agg0]",
    "tests/resample/test_resample_api.py::test_resample_empty",
    "tests/resample/test_time_grouper.py::test_aggregate_normal[min]",
    "tests/resample/test_time_grouper.py::test_aggregate_normal[max]",
    "tests/resample/test_time_grouper.py::test_aggregate_normal[first]",
    "tests/resample/test_time_grouper.py::test_aggregate_normal[last]",
    "tests/resample/test_time_grouper.py::test_aggregate_normal[sum]",
    "tests/resample/test_time_grouper.py::test_aggregate_normal[mean]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_unique[float-<lambda>-Series]",
    "tests/resample/test_time_grouper.py::test_aggregate_normal[median]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_unique[float-unique-Series]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_unique[float-unique-<lambda>]",
    "tests/resample/test_time_grouper.py::test_aggregate_normal[prod]",
    "tests/resample/test_time_grouper.py::test_aggregate_normal[var]",
    "tests/resample/test_time_grouper.py::test_aggregate_normal[std]",
    "tests/resample/test_time_grouper.py::test_aggregate_normal[quantile]",
    "tests/resample/test_time_grouper.py::test_aggregate_normal[count]",
    "tests/resample/test_time_grouper.py::test_aggregate_normal[size]",
    "tests/resample/test_time_grouper.py::test_aggregate_normal[nunique]",
    "tests/resample/test_time_grouper.py::test_upsample_sum[sum-method_args0-expected_values0]",
    "tests/resample/test_time_grouper.py::test_upsample_sum[sum-method_args1-expected_values1]",
    "tests/resample/test_time_grouper.py::test_upsample_sum[prod-method_args4-expected_values4]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_memory_usage[object]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_is_extension_array_dtype[float]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_index_from_array[float]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_index_from_array[object]",
    "tests/resample/test_time_grouper.py::test_upsample_sum[prod-method_args5-expected_values5]",
    "tests/reshape/test_crosstab.py::TestCrosstab::test_crosstab_multiple",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_getitem_mask[float]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_getitem_mask[object]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_getitem_boolean_array_mask[float]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_getitem_boolean_array_mask[object]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_array_type[float]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_array_type[object]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_series_constructor[float]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_series_constructor[object]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_dataframe_constructor_from_dict[float-True]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_dataframe_constructor_from_dict[float-False]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_dataframe_constructor_from_dict[object-True]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_dataframe_constructor_from_dict[object-False]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_dataframe_from_series[float]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_dataframe_from_series[object]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_astype_object_frame[object-data]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_astype_object_frame[object-data_missing]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_astype_own_type[float-False]",
    "tests/extension/test_numpy.py::TestNumpyExtensionArray::test_astype_own_type[object-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_unstack[duration[s]-series-index2]",
    "tests/extension/test_arrow.py::TestArrowArray::test_unstack[duration[s]-series-index3]",
    "tests/extension/test_arrow.py::TestArrowArray::test_unstack[duration[ms]-series-index2]",
    "tests/extension/test_arrow.py::TestArrowArray::test_unstack[duration[ms]-series-index3]",
    "tests/extension/test_arrow.py::TestArrowArray::test_unstack[duration[us]-series-index2]",
    "tests/extension/test_arrow.py::TestArrowArray::test_unstack[duration[us]-series-index3]",
    "tests/extension/test_arrow.py::TestArrowArray::test_unstack[duration[ns]-series-index2]",
    "tests/extension/test_arrow.py::TestArrowArray::test_unstack[duration[ns]-series-index3]",
    "tests/reshape/test_crosstab.py::TestCrosstab::test_crosstab_with_categorial_columns",
    "tests/reshape/test_cut.py::test_bins[list]",
    "tests/reshape/test_cut.py::test_bins[array]",
    "tests/reshape/test_cut.py::test_right",
    "tests/reshape/test_cut.py::test_no_right",
    "tests/reshape/test_cut.py::test_bins_from_interval_index",
    "tests/extension/test_arrow.py::TestArrowArray::test_unary_ufunc_dunder_equivalence[uint8-negative]",
    "tests/reshape/test_cut.py::test_cut_pass_labels[<lambda>-<lambda>0]",
    "tests/extension/test_arrow.py::TestArrowArray::test_unary_ufunc_dunder_equivalence[uint16-negative]",
    "tests/extension/test_arrow.py::TestArrowArray::test_unary_ufunc_dunder_equivalence[uint32-negative]",
    "tests/reshape/test_cut.py::test_cut_pass_labels_compat",
    "tests/extension/test_arrow.py::TestArrowArray::test_unary_ufunc_dunder_equivalence[uint64-negative]",
    "tests/reshape/test_cut.py::test_cut_bool_coercion_to_int[array-assert_categorical_equal-6]",
    "tests/reshape/test_cut.py::test_cut_bool_coercion_to_int[array-assert_categorical_equal-7]",
    "tests/reshape/test_cut.py::test_cut_nullable_integer[True-True-bins1]",
    "tests/reshape/test_cut.py::test_cut_nullable_integer[True-False-bins1]",
    "tests/extension/test_arrow.py::TestArrowArray::test_unary_ufunc_dunder_equivalence[bool-negative]",
    "tests/reshape/test_cut.py::test_cut_nullable_integer[False-True-bins1]",
    "tests/extension/test_arrow.py::TestArrowArray::test_unary_ufunc_dunder_equivalence[bool-absolute]",
    "tests/reshape/test_cut.py::test_cut_nullable_integer[False-False-bins1]",
    "tests/reshape/test_cut.py::test_cut_non_unique_labels[data0-bins0-labels0-expected_codes0-expected_labels0]",
    "tests/reshape/test_cut.py::test_cut_non_unique_labels[data1-bins1-labels1-expected_codes1-expected_labels1]",
    "tests/reshape/test_cut.py::test_cut_unordered_labels[data0-bins0-labels0-expected_codes0-expected_labels0]",
    "tests/reshape/test_cut.py::test_cut_unordered_labels[data1-bins1-labels1-expected_codes1-expected_labels1]",
    "tests/extension/test_numpy.py::Test2DCompat::test_copy_order[float]",
    "tests/reshape/test_pivot.py::TestPivotTable::test_pivot_table_categorical_observed_equal[False]",
    "tests/reshape/test_pivot.py::TestPivotTable::test_pivot_dtypes",
    "tests/extension/test_period.py::TestPeriodArray::test_is_extension_array_dtype[D]",
    "tests/extension/test_period.py::TestPeriodArray::test_is_extension_array_dtype[2D]",
    "tests/reshape/test_pivot.py::TestPivotTable::test_pivot_with_tz[s-True]",
    "tests/extension/test_arrow.py::TestArrowArray::test_combine_add[duration[s]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_combine_add[duration[ms]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_combine_add[duration[us]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_combine_add[duration[ns]]",
    "tests/reshape/test_pivot.py::TestPivotTable::test_pivot_with_tz[s-False]",
    "tests/reshape/test_pivot.py::TestPivotTable::test_pivot_with_tz[ms-True]",
    "tests/reshape/test_pivot.py::TestPivotTable::test_pivot_with_tz[ms-False]",
    "tests/extension/test_period.py::TestPeriodArray::test_series_constructor[D]",
    "tests/extension/test_period.py::TestPeriodArray::test_series_constructor[2D]",
    "tests/reshape/test_pivot.py::TestPivotTable::test_pivot_with_tz[us-True]",
    "tests/extension/test_period.py::TestPeriodArray::test_astype_own_type[D-False]",
    "tests/extension/test_period.py::TestPeriodArray::test_astype_own_type[2D-False]",
    "tests/reshape/test_pivot.py::TestPivotTable::test_pivot_with_tz[us-False]",
    "tests/extension/test_period.py::Test2DCompat::test_copy_order[D]",
    "tests/extension/test_period.py::Test2DCompat::test_copy_order[2D]",
    "tests/reshape/test_pivot.py::TestPivotTable::test_pivot_with_tz[ns-True]",
    "tests/reshape/test_pivot.py::TestPivotTable::test_pivot_with_tz[ns-False]",
    "tests/extension/test_sparse.py::TestSparseArray::test_is_extension_array_dtype[0]",
    "tests/extension/test_sparse.py::TestSparseArray::test_is_extension_array_dtype[nan]",
    "tests/reshape/test_pivot.py::TestPivotTable::test_pivot_no_level_overlap",
    "tests/reshape/test_pivot.py::TestPivotTable::test_pivot_timegrouper",
    "tests/reshape/test_pivot.py::TestPivotTable::test_pivot_timegrouper_double",
    "tests/extension/test_sparse.py::TestSparseArray::test_series_constructor[0]",
    "tests/extension/test_sparse.py::TestSparseArray::test_series_constructor[nan]",
    "tests/extension/test_sparse.py::TestSparseArray::test_astype_own_type[0-False]",
    "tests/extension/test_sparse.py::TestSparseArray::test_astype_own_type[nan-False]",
    "tests/reshape/test_pivot.py::TestPivotTable::test_daily",
    "tests/reshape/test_pivot.py::TestPivotTable::test_monthly",
    "tests/reshape/test_pivot.py::TestPivotTable::test_pivot_with_categorical[False-True]",
    "tests/reshape/test_pivot.py::TestPivotTable::test_pivot_with_categorical[False-False]",
    "tests/reshape/test_pivot.py::TestPivotTable::test_pivot_with_categorical[False-None]",
    "tests/reshape/test_pivot.py::TestPivotTable::test_categorical_pivot_index_ordering[True]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[timestamp[s]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[timestamp[s, tz=UTC]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[timestamp[s, tz=US/Pacific]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[timestamp[s, tz=US/Eastern]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[timestamp[ms]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[timestamp[ms, tz=UTC]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[timestamp[ms, tz=US/Pacific]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[timestamp[ms, tz=US/Eastern]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[timestamp[us]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[timestamp[us, tz=UTC]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[timestamp[us, tz=US/Pacific]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[timestamp[us, tz=US/Eastern]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[timestamp[ns]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[timestamp[ns, tz=UTC]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[timestamp[ns, tz=US/Pacific]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[timestamp[ns, tz=US/Eastern]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[duration[s]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[duration[ms]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[duration[us]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[duration[ns]]",
    "tests/reshape/test_pivot.py::TestPivotTable::test_pivot_with_categorical[False-True]",
    "tests/reshape/test_pivot.py::TestPivotTable::test_pivot_with_categorical[False-False]",
    "tests/reshape/test_pivot.py::TestPivotTable::test_pivot_with_categorical[False-None]",
    "tests/reshape/test_pivot.py::TestPivotTable::test_categorical_pivot_index_ordering[True]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[timestamp[s]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[timestamp[s, tz=UTC]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[timestamp[s, tz=US/Pacific]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[timestamp[s, tz=US/Eastern]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[timestamp[ms]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[timestamp[ms, tz=UTC]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[timestamp[ms, tz=US/Pacific]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[timestamp[ms, tz=US/Eastern]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[timestamp[us]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[timestamp[us, tz=UTC]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[timestamp[us, tz=US/Pacific]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[timestamp[us, tz=US/Eastern]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[timestamp[ns]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[timestamp[ns, tz=UTC]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[timestamp[ns, tz=US/Pacific]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[timestamp[ns, tz=US/Eastern]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[duration[s]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[duration[ms]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[duration[us]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_getitem_scalar[duration[ns]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[uint8]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[uint16]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[uint32]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[uint64]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[int8]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[int16]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[int32]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[int64]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[float]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[double]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[decimal128(7, 3)]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[string]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[binary]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[time32[s]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[time32[ms]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[time64[us]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[time64[ns]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[date32[day]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[date64[ms]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[timestamp[s]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[timestamp[s, tz=UTC]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[timestamp[s, tz=US/Pacific]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[timestamp[s, tz=US/Eastern]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[timestamp[ms]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[timestamp[ms, tz=UTC]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[timestamp[ms, tz=US/Pacific]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[timestamp[ms, tz=US/Eastern]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[timestamp[us]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[timestamp[us, tz=UTC]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[timestamp[us, tz=US/Pacific]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[timestamp[us, tz=US/Eastern]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[timestamp[ns]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[timestamp[ns, tz=UTC]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[timestamp[ns, tz=US/Pacific]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[timestamp[ns, tz=US/Eastern]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[duration[s]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[duration[ms]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[duration[us]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[duration[ns]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_array_type[bool]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[uint8]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[uint16]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[uint32]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[uint64]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[int8]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[int16]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[int32]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[int64]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[float]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[double]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[decimal128(7, 3)]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[string]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[binary]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[time32[s]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[time32[ms]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[time64[us]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[time64[ns]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[date32[day]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[date64[ms]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[timestamp[s]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[timestamp[s, tz=UTC]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[timestamp[s, tz=US/Pacific]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[timestamp[s, tz=US/Eastern]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[timestamp[ms]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[timestamp[ms, tz=UTC]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[timestamp[ms, tz=US/Pacific]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[timestamp[ms, tz=US/Eastern]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[timestamp[us]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[timestamp[us, tz=UTC]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[timestamp[us, tz=US/Pacific]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[timestamp[us, tz=US/Eastern]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[timestamp[ns]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[timestamp[ns, tz=UTC]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[timestamp[ns, tz=US/Pacific]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[timestamp[ns, tz=US/Eastern]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[duration[s]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[duration[ms]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[duration[us]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[duration[ns]]",
    "tests/extension/test_arrow.py::TestArrowArray::test_series_constructor[bool]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_object_series[duration[s]-data]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_object_series[duration[s]-data_missing]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_object_series[duration[ms]-data]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_object_series[duration[ms]-data_missing]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_object_series[duration[us]-data]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_object_series[duration[us]-data_missing]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_object_series[duration[ns]-data]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_object_series[duration[ns]-data_missing]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_object_frame[duration[s]-data]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_object_frame[duration[s]-data_missing]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_object_frame[duration[ms]-data]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_object_frame[duration[ms]-data_missing]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_object_frame[duration[us]-data]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_object_frame[duration[us]-data_missing]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_object_frame[duration[ns]-data]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_object_frame[duration[ns]-data_missing]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[uint8-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[uint16-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[uint32-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[uint64-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[int8-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[int16-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[int32-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[int64-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[float-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[double-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[decimal128(7, 3)-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[string-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[binary-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[time32[s]-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[time32[ms]-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[time64[us]-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[time64[ns]-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[date32[day]-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[date64[ms]-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[timestamp[s]-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[timestamp[s, tz=UTC]-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[timestamp[s, tz=US/Pacific]-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[timestamp[s, tz=US/Eastern]-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[timestamp[ms]-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[timestamp[ms, tz=UTC]-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[timestamp[ms, tz=US/Pacific]-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[timestamp[ms, tz=US/Eastern]-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[timestamp[us]-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[timestamp[us, tz=UTC]-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[timestamp[us, tz=US/Pacific]-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[timestamp[us, tz=US/Eastern]-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[timestamp[ns]-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[timestamp[ns, tz=UTC]-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[timestamp[ns, tz=US/Pacific]-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[timestamp[ns, tz=US/Eastern]-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[duration[s]-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[duration[ms]-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[duration[us]-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[duration[ns]-False]",
    "tests/extension/test_arrow.py::TestArrowArray::test_astype_own_type[bool-False]",
    "tests/reshape/concat/test_categorical.py::TestCategoricalConcat::test_categorical_index_upcast",
    "tests/reshape/concat/test_concat.py::TestConcatenate::test_concat_keys_specific_levels",
    "tests/reshape/concat/test_datetimes.py::TestTimezoneConcat::test_concat_multiindex_with_tz",
    "tests/reshape/concat/test_empty.py::TestEmptyConcat::test_concat_empty_series",
    "tests/reshape/concat/test_index.py::TestIndexConcat::test_concat_same_index_names[idx-idx-None-None]",
    "tests/reshape/concat/test_index.py::TestIndexConcat::test_concat_same_index_names[idx-None-None-None]",
    "tests/reshape/concat/test_index.py::TestMultiIndexConcat::test_concat_index_keep_dtype",
    "tests/reshape/concat/test_index.py::TestMultiIndexConcat::test_concat_index_keep_dtype_ea_numeric[UInt8]",
    "tests/reshape/concat/test_index.py::TestMultiIndexConcat::test_concat_index_keep_dtype_ea_numeric[UInt32]",
    "tests/reshape/concat/test_index.py::TestMultiIndexConcat::test_concat_index_keep_dtype_ea_numeric[UInt64]",
    "tests/reshape/concat/test_index.py::TestMultiIndexConcat::test_concat_index_keep_dtype_ea_numeric[Int8]",
    "tests/reshape/concat/test_index.py::TestMultiIndexConcat::test_concat_index_keep_dtype_ea_numeric[Int32]",
    "tests/reshape/concat/test_index.py::TestMultiIndexConcat::test_concat_index_keep_dtype_ea_numeric[Int64]",
    "tests/reshape/concat/test_index.py::TestMultiIndexConcat::test_concat_index_keep_dtype_ea_numeric[Float32]",
    "tests/reshape/concat/test_index.py::TestMultiIndexConcat::test_concat_index_keep_dtype_ea_numeric[Float64]",
    "tests/reshape/concat/test_index.py::TestMultiIndexConcat::test_concat_index_find_common[Int8]",
    "tests/reshape/concat/test_index.py::TestMultiIndexConcat::test_concat_index_find_common[Int32]",
    "tests/reshape/concat/test_series.py::TestSeriesConcat::test_concat_series_axis1",
    "tests/reshape/merge/test_join.py::test_join_empty[False-cross-empty]",
    "tests/reshape/merge/test_join.py::test_join_empty[True-cross-empty]",
    "tests/extension/test_string.py::TestStringArray::test_is_extension_array_dtype[python-True]",
    "tests/extension/test_string.py::TestStringArray::test_is_extension_array_dtype[python-False]",
    "tests/extension/test_string.py::TestStringArray::test_is_extension_array_dtype[pyarrow-True]",
    "tests/extension/test_string.py::TestStringArray::test_is_extension_array_dtype[pyarrow-False]",
    "tests/extension/test_string.py::TestStringArray::test_is_extension_array_dtype[pyarrow_numpy-True]",
    "tests/extension/test_string.py::TestStringArray::test_is_extension_array_dtype[pyarrow_numpy-False]",
    "tests/reshape/merge/test_merge.py::TestMerge::test_merge_on_index_with_more_values[index3-expected_index3-outer]",
    "tests/arithmetic/test_timedelta64.py::TestTimedeltaArraylikeMulDivOps::test_td64arr_floordiv_td64arr_with_nat[array]",
    "tests/extension/test_string.py::TestStringArray::test_series_constructor[python-True]",
    "tests/extension/test_string.py::TestStringArray::test_series_constructor[python-False]",
    "tests/extension/test_string.py::TestStringArray::test_series_constructor[pyarrow-True]",
    "tests/extension/test_string.py::TestStringArray::test_series_constructor[pyarrow-False]",
    "tests/extension/test_string.py::TestStringArray::test_series_constructor[pyarrow_numpy-True]",
    "tests/extension/test_string.py::TestStringArray::test_series_constructor[pyarrow_numpy-False]",
    "tests/extension/test_string.py::TestStringArray::test_astype_own_type[python-True-False]",
    "tests/extension/test_string.py::TestStringArray::test_astype_own_type[python-False-False]",
    "tests/extension/test_string.py::TestStringArray::test_astype_own_type[pyarrow-True-False]",
    "tests/extension/test_string.py::TestStringArray::test_astype_own_type[pyarrow-False-False]",
    "tests/extension/test_string.py::TestStringArray::test_astype_own_type[pyarrow_numpy-True-False]",
    "tests/extension/test_string.py::TestStringArray::test_astype_own_type[pyarrow_numpy-False-False]",
    "tests/reshape/merge/test_merge.py::TestMerge::test_merge_on_index_with_more_values[index14-expected_index14-outer]",
    "tests/reshape/merge/test_merge.py::TestMergeCategorical::test_identical",
    "tests/reshape/merge/test_merge.py::TestMergeCategorical::test_basic",
    "tests/reshape/merge/test_merge.py::TestMergeCategorical::test_dtype_on_merged_different[inner-<lambda>1]",
    "tests/reshape/merge/test_merge.py::TestMergeCategorical::test_dtype_on_merged_different[outer-<lambda>1]",
    "tests/reshape/merge/test_merge.py::TestMergeCategorical::test_dtype_on_merged_different[left-<lambda>0]",
    "tests/reshape/merge/test_merge.py::TestMergeCategorical::test_dtype_on_merged_different[left-<lambda>1]",
    "tests/reshape/merge/test_merge.py::TestMergeCategorical::test_dtype_on_merged_different[right-<lambda>1]",
    "tests/reshape/merge/test_merge.py::test_merge_suffix[b-b-kwargs6-expected_cols6]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[uint8-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[uint8-__rtruediv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[uint16-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[uint16-__rtruediv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[uint32-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[uint32-__rtruediv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[uint64-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[uint64-__rtruediv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[int8-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[int8-__rtruediv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[int16-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[int16-__rtruediv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[int32-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[int32-__rtruediv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[int64-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[int64-__rtruediv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[float-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[float-__rtruediv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[double-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[double-__rtruediv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[decimal128(7, 3)-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[decimal128(7, 3)-__rtruediv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[string-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[string-__rtruediv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[binary-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[binary-__rtruediv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[time32[s]-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[time32[s]-__rtruediv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[time32[ms]-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[time32[ms]-__rtruediv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[time64[us]-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[time64[us]-__rtruediv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[time64[ns]-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[time64[ns]-__rtruediv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[date32[day]-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[date32[day]-__rtruediv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[date64[ms]-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[date64[ms]-__rtruediv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[timestamp[s]-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[timestamp[s]-__rtruediv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[timestamp[s, tz=UTC]-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[timestamp[s, tz=UTC]-__rtruediv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[timestamp[s, tz=US/Pacific]-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[timestamp[s, tz=US/Pacific]-__rtruediv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[timestamp[s, tz=US/Eastern]-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[timestamp[s, tz=US/Eastern]-__rtruediv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[timestamp[ms]-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[timestamp[ms]-__rtruediv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[timestamp[ms, tz=UTC]-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[timestamp[ms, tz=UTC]-__rtruediv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[timestamp[ms, tz=US/Pacific]-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[timestamp[ms, tz=US/Pacific]-__rtruediv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[timestamp[ms, tz=US/Eastern]-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[timestamp[ms, tz=US/Eastern]-__rtruediv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[timestamp[us]-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[timestamp[us]-__rtruediv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[timestamp[us, tz=UTC]-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[timestamp[us, tz=UTC]-__rtruediv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[timestamp[us, tz=US/Pacific]-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[timestamp[us, tz=US/Pacific]-__rtruediv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[timestamp[us, tz=US/Eastern]-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[timestamp[us, tz=US/Eastern]-__rtruediv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[timestamp[ns]-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[timestamp[ns]-__rtruediv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[timestamp[ns, tz=UTC]-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[timestamp[ns, tz=UTC]-__rtruediv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[timestamp[ns, tz=US/Pacific]-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[timestamp[ns, tz=US/Pacific]-__rtruediv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[timestamp[ns, tz=US/Eastern]-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[timestamp[ns, tz=US/Eastern]-__rtruediv__]",
    "tests/extension/decimal/test_decimal.py::TestDecimalArray::test_direct_arith_with_ndframe_returns_not_implemented[__eq__-Index]",
    "tests/extension/decimal/test_decimal.py::TestDecimalArray::test_direct_arith_with_ndframe_returns_not_implemented[__ne__-Index]",
    "tests/extension/decimal/test_decimal.py::TestDecimalArray::test_direct_arith_with_ndframe_returns_not_implemented[__le__-Index]",
    "tests/extension/decimal/test_decimal.py::TestDecimalArray::test_direct_arith_with_ndframe_returns_not_implemented[__lt__-Index]",
    "tests/extension/decimal/test_decimal.py::TestDecimalArray::test_direct_arith_with_ndframe_returns_not_implemented[__ge__-Index]",
    "tests/extension/decimal/test_decimal.py::TestDecimalArray::test_direct_arith_with_ndframe_returns_not_implemented[__gt__-Index]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[bool-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_frame_with_scalar[bool-__rtruediv__]",
    "tests/arrays/test_timedeltas.py::TestUnaryOps::test_pos",
    "tests/arrays/test_timedeltas.py::TestUnaryOps::test_neg",
    "tests/arrays/test_timedeltas.py::TestUnaryOps::test_neg_freq",
    "tests/arrays/boolean/test_construction.py::test_to_numpy_copy",
    "tests/arrays/categorical/test_astype.py::TestAstype::test_astype_nan_to_int[values0-CategoricalIndex]",
    "tests/arrays/categorical/test_astype.py::TestAstype::test_astype_nan_to_int[values1-CategoricalIndex]",
    "tests/extension/decimal/test_decimal.py::TestDecimalArray::test_getitem_series_integer_with_missing_raises[integer-array]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_series_with_array[float-__add__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_series_with_array[float-__radd__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_series_with_array[float-__sub__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_series_with_array[float-__rsub__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_series_with_array[float-__mul__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_series_with_array[float-__rmul__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_series_with_array[float-__floordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_series_with_array[float-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_series_with_array[float-__truediv__]",
    "tests/scalar/interval/test_arithmetic.py::TestIntervalArithmetic::test_timedelta_add_timestamp_interval[timedelta64]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_series_with_array[float-__rtruediv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_series_with_array[float-__pow__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_series_with_array[double-__add__]",
    "tests/arrays/floating/test_comparison.py::TestComparisonOps::test_ufunc_with_out[Float32Dtype]",
    "tests/arrays/floating/test_comparison.py::TestComparisonOps::test_ufunc_with_out[Float64Dtype]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_series_with_array[double-__radd__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_series_with_array[double-__sub__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_series_with_array[double-__rsub__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_series_with_array[double-__mul__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_series_with_array[double-__rmul__]",
    "tests/arrays/floating/test_function.py::test_ufuncs_single[sign]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_series_with_array[double-__floordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_series_with_array[double-__rfloordiv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_series_with_array[double-__truediv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_series_with_array[double-__rtruediv__]",
    "tests/extension/test_arrow.py::TestArrowArray::test_arith_series_with_array[double-__pow__]",
    "tests/scalar/period/test_arithmetic.py::TestPeriodArithmetic::test_period_add_sub_td64_nat[ns]",
    "tests/scalar/period/test_arithmetic.py::TestPeriodArithmetic::test_period_add_sub_td64_nat[us]",
    "tests/scalar/period/test_arithmetic.py::TestPeriodArithmetic::test_period_add_sub_td64_nat[ms]",
    "tests/scalar/period/test_arithmetic.py::TestPeriodArithmetic::test_period_add_sub_td64_nat[s]",
    "tests/scalar/period/test_arithmetic.py::TestPeriodArithmetic::test_period_add_sub_td64_nat[m]",
    "tests/scalar/timedelta/test_arithmetic.py::TestTimedeltaAdditionSubtraction::test_td_sub_timedelta64",
    "tests/arrays/integer/test_comparison.py::TestComparisonOps::test_ufunc_with_out[Int8Dtype]",
    "tests/arrays/integer/test_comparison.py::TestComparisonOps::test_ufunc_with_out[Int16Dtype]",
    "tests/arrays/integer/test_comparison.py::TestComparisonOps::test_ufunc_with_out[Int32Dtype]",
    "tests/arrays/integer/test_comparison.py::TestComparisonOps::test_ufunc_with_out[Int64Dtype]",
    "tests/arrays/integer/test_comparison.py::TestComparisonOps::test_ufunc_with_out[UInt8Dtype]",
    "tests/arrays/integer/test_comparison.py::TestComparisonOps::test_ufunc_with_out[UInt16Dtype]",
    "tests/arrays/integer/test_comparison.py::TestComparisonOps::test_ufunc_with_out[UInt32Dtype]",
    "tests/arrays/integer/test_comparison.py::TestComparisonOps::test_ufunc_with_out[UInt64Dtype]",
    "tests/scalar/timestamp/test_arithmetic.py::TestTimestampArithmetic::test_rsub_dtscalars[None]",
    "tests/arrays/integer/test_function.py::test_ufuncs_single_int[sign]",
    "tests/arrays/masked/test_arrow_compat.py::test_arrow_array[Float64]",
    "tests/arrays/masked/test_arrow_compat.py::test_from_arrow_type_error[Float64]",
    "tests/arrays/sparse/test_arithmetics.py::test_ufuncs[arr0-absolute]",
    "tests/arrays/sparse/test_arithmetics.py::test_ufuncs[arr0-exp]",
    "tests/arrays/sparse/test_arithmetics.py::test_ufuncs[arr1-absolute]",
    "tests/arrays/sparse/test_arithmetics.py::test_ufuncs[arr1-exp]",
    "tests/arrays/sparse/test_array.py::TestSparseArrayAnalytics::test_ufunc",
    "tests/arrays/sparse/test_array.py::TestSparseArrayAnalytics::test_ufunc_args",
    "tests/arrays/sparse/test_array.py::TestSparseArrayAnalytics::test_modf[0.0]",
    "tests/arrays/sparse/test_array.py::TestSparseArrayAnalytics::test_modf[nan]",
    "tests/extension/test_arrow.py::test_from_arrow_respecting_given_dtype",
    "tests/extension/test_arrow.py::test_dt_tz_localize_nonexistent[shift_backward-exp_date1]",
    "tests/extension/json/test_json.py::TestJSONArray::test_getitem_series_integer_with_missing_raises[integer-array]",
    "tests/base/test_conversion.py::test_array[index-arr3-_left]",
    "tests/base/test_conversion.py::test_array[series-arr3-_left]",
    "tests/indexes/ranges/test_range.py::TestRangeIndex::test_cache",
    "tests/indexes/ranges/test_range.py::TestRangeIndex::test_engineless_lookup",
    "tests/indexes/ranges/test_range.py::TestRangeIndex::test_append_len_one[ri4]",
    "tests/indexes/ranges/test_setops.py::test_range_difference",
    "tests/indexing/test_categorical.py::TestCategoricalIndex::test_ix_categorical_index",
    "tests/frame/test_constructors.py::TestDataFrameConstructors::test_constructor_dict_datetime64_index",
    "tests/frame/test_constructors.py::TestDataFrameConstructors::test_constructor_dict_timedelta64_index[<lambda>-pytimedelta]",
    "tests/indexing/test_chaining_and_caching.py::TestChaining::test_detect_chained_assignment_warning_stacklevel[3]",
    "tests/indexing/test_chaining_and_caching.py::TestChaining::test_detect_chained_assignment_warning_stacklevel[rhs1]",
    "tests/indexing/test_chaining_and_caching.py::TestChaining::test_chained_getitem_with_lists",
    "tests/indexing/test_chaining_and_caching.py::TestChaining::test_getitem_loc_assignment_slice_state",
    "tests/frame/test_constructors.py::TestDataFrameConstructors::test_constructor_for_list_with_dtypes",
    "tests/frame/test_constructors.py::TestDataFrameConstructors::test_construct_with_two_categoricalindex_series",
    "tests/groupby/test_timegrouper.py::TestGroupBy::test_timegrouper_with_reg_groups",
    "tests/groupby/test_timegrouper.py::TestGroupBy::test_groupby_datetime64_32_bit",
    "tests/groupby/test_timegrouper.py::TestGroupBy::test_scalar_call_versus_list_call",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-bool-bool-keys0-agg_index0]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-bool-bool-keys1-agg_index1]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-bool-int32-keys0-agg_index0]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-bool-int32-keys1-agg_index1]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-bool-int64-keys0-agg_index0]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-bool-int64-keys1-agg_index1]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-bool-float32-keys0-agg_index0]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-bool-float32-keys1-agg_index1]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-bool-float64-keys0-agg_index0]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-bool-float64-keys1-agg_index1]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-int32-bool-keys0-agg_index0]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-int32-bool-keys1-agg_index1]",
    "tests/indexing/test_iloc.py::TestiLocBaseIndependent::test_iloc_getitem_doc_issue",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-int32-int32-keys0-agg_index0]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-int32-int32-keys1-agg_index1]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-int32-int64-keys0-agg_index0]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-int32-int64-keys1-agg_index1]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-int32-float32-keys0-agg_index0]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-int32-float32-keys1-agg_index1]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-int32-float64-keys0-agg_index0]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-int32-float64-keys1-agg_index1]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-int64-bool-keys0-agg_index0]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-int64-bool-keys1-agg_index1]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-int64-int32-keys0-agg_index0]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-int64-int32-keys1-agg_index1]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-int64-int64-keys0-agg_index0]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-int64-int64-keys1-agg_index1]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-int64-float32-keys0-agg_index0]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-int64-float32-keys1-agg_index1]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-int64-float64-keys0-agg_index0]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-int64-float64-keys1-agg_index1]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-float32-bool-keys0-agg_index0]",
    "tests/extension/test_categorical.py::TestCategorical::test_setitem_frame_2d_values",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-float32-bool-keys1-agg_index1]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-float32-int32-keys0-agg_index0]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-float32-int32-keys1-agg_index1]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-float32-int64-keys0-agg_index0]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-float32-int64-keys1-agg_index1]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-float32-float32-keys0-agg_index0]",
    "tests/extension/test_categorical.py::TestCategorical::test_stack[True-columns0]",
    "tests/extension/test_categorical.py::TestCategorical::test_stack[True-columns1]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-float32-float32-keys1-agg_index1]",
    "tests/extension/test_categorical.py::TestCategorical::test_stack[False-columns0]",
    "tests/extension/test_categorical.py::TestCategorical::test_stack[False-columns1]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-float32-float64-keys0-agg_index0]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-float32-float64-keys1-agg_index1]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-float64-bool-keys0-agg_index0]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-float64-bool-keys1-agg_index1]",
    "tests/series/test_subclass.py::TestSeriesSubclassing::test_asof",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-float64-int32-keys0-agg_index0]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-float64-int32-keys1-agg_index1]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-float64-int64-keys0-agg_index0]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-float64-int64-keys1-agg_index1]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-float64-float32-keys0-agg_index0]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-float64-float32-keys1-agg_index1]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-float64-float64-keys0-agg_index0]",
    "tests/groupby/aggregate/test_aggregate.py::test_callable_result_dtype_frame[apply-float64-float64-keys1-agg_index1]",
    "tests/extension/test_categorical.py::TestCategorical::test_searchsorted[True]",
    "tests/extension/test_categorical.py::TestCategorical::test_is_extension_array_dtype",
    "tests/groupby/aggregate/test_aggregate.py::test_order_aggregate_multiple_funcs",
    "tests/extension/test_categorical.py::TestCategorical::test_in_numeric_groupby",
    "tests/extension/test_categorical.py::TestCategorical::test_series_constructor",
    "tests/extension/test_categorical.py::TestCategorical::test_astype_own_type[False]",
    "tests/extension/test_categorical.py::Test2DCompat::test_copy_order",
    "tests/extension/test_common.py::test_ellipsis_index",
    "tests/groupby/aggregate/test_aggregate.py::test_nonagg_agg",
    "tests/groupby/aggregate/test_aggregate.py::test_groupby_aggregate_directory[size]",
    "tests/extension/test_datetime.py::TestDatetimeArray::test_is_extension_array_dtype[US/Central]",
    "tests/frame/test_query_eval.py::TestDataFrameQueryWithMultiIndex::test_query_multiindex_get_index_resolvers",
    "tests/extension/test_datetime.py::TestDatetimeArray::test_astype_own_type[US/Central-False]",
    "tests/extension/test_datetime.py::TestDatetimeArray::test_series_constructor[US/Central]",
    "tests/extension/test_interval.py::TestIntervalArray::test_setitem_frame_2d_values",
    "tests/extension/test_interval.py::TestIntervalArray::test_stack[True-columns0]",
    "tests/extension/test_interval.py::TestIntervalArray::test_stack[True-columns1]",
    "tests/extension/test_interval.py::TestIntervalArray::test_stack[False-columns0]",
    "tests/extension/test_interval.py::TestIntervalArray::test_stack[False-columns1]",
    "tests/groupby/methods/test_nth.py::test_nth_after_selection[None-selection1]",
    "tests/groupby/methods/test_nth.py::test_nth_after_selection[None-selection2]",
    "tests/series/accessors/test_cat_accessor.py::TestCatAccessor::test_dt_accessor_api_for_categorical[idx0]",
    "tests/series/accessors/test_dt_accessor.py::TestSeriesDatetimeValues::test_dt_accessor_limited_display_api",
    "tests/indexing/test_loc.py::TestLocBaseIndependent::test_loc_setitem_frame_mixed_labels",
    "tests/indexing/test_loc.py::TestLocBaseIndependent::test_loc_getitem_uint64_scalar[9223372036854775807-expected0]",
    "tests/tseries/offsets/test_ticks.py::test_tick_addition[Hour-expected0]",
    "tests/tseries/offsets/test_ticks.py::test_tick_addition[Minute-expected1]",
    "tests/tseries/offsets/test_ticks.py::test_tick_addition[Second-expected2]",
    "tests/tseries/offsets/test_ticks.py::test_tick_addition[Milli-expected3]",
    "tests/tseries/offsets/test_ticks.py::test_tick_addition[Micro-expected4]",
    "tests/tseries/offsets/test_ticks.py::test_tick_addition[Nano-expected5]",
    "tests/tseries/offsets/test_ticks.py::test_tick_rdiv[Nano]",
    "tests/groupby/methods/test_quantile.py::test_groupby_quantile_nonmulti_levels_order",
    "tests/tslibs/test_parsing.py::test_guess_datetime_format_with_parseable_formats[30-12-2011-%d-%m-%Y]",
    "tests/tslibs/test_parsing.py::test_guess_datetime_format_with_parseable_formats[27.03.2003 14:55:00.000-%d.%m.%Y %H:%M:%S.%f]",
    "tests/frame/test_stack_unstack.py::TestDataFrameReshape::test_unstack_bool",
    "tests/frame/test_stack_unstack.py::TestDataFrameReshape::test_unstack_unused_levels",
    "tests/util/test_assert_produces_warning.py::test_raises_during_exception",
    "tests/frame/test_stack_unstack.py::test_unstack_non_slice_like_blocks",
    "tests/groupby/transform/test_transform.py::test_transform_transformation_func[cumcount]",
    "tests/frame/test_stack_unstack.py::TestStackUnstackMultiLevel::test_unstack_unobserved_keys[True]",
    "tests/frame/test_stack_unstack.py::TestStackUnstackMultiLevel::test_unstack_unobserved_keys[False]",
    "tests/groupby/transform/test_transform.py::test_transform_numeric_ret[count-a-expected0]",
    "tests/groupby/transform/test_transform.py::test_transform_numeric_ret[count-cols1-expected1]",
    "tests/groupby/transform/test_transform.py::test_transform_numeric_ret[size-a-expected0]",
    "tests/groupby/transform/test_transform.py::test_transform_cumcount",
    "tests/window/test_groupby.py::TestRolling::test_groupby_level",
    "tests/indexes/test_common.py::TestCommon::test_constructor_unwraps_index[datetime]",
    "tests/indexes/test_numpy_compat.py::test_numpy_ufuncs_basic[bool-dtype-exp]",
    "tests/indexes/test_numpy_compat.py::test_numpy_ufuncs_basic[bool-dtype-exp2]",
    "tests/indexes/test_numpy_compat.py::test_numpy_ufuncs_basic[bool-dtype-expm1]",
    "tests/indexes/test_numpy_compat.py::test_numpy_ufuncs_basic[bool-dtype-log]",
    "tests/indexes/test_numpy_compat.py::test_numpy_ufuncs_basic[bool-dtype-log2]",
    "tests/indexes/test_numpy_compat.py::test_numpy_ufuncs_basic[bool-dtype-log10]",
    "tests/indexes/test_numpy_compat.py::test_numpy_ufuncs_basic[bool-dtype-log1p]",
    "tests/indexes/test_numpy_compat.py::test_numpy_ufuncs_basic[bool-dtype-sqrt]",
    "tests/indexes/test_numpy_compat.py::test_numpy_ufuncs_basic[bool-dtype-sin]",
    "tests/indexes/test_numpy_compat.py::test_numpy_ufuncs_basic[bool-dtype-cos]",
    "tests/indexes/test_numpy_compat.py::test_numpy_ufuncs_basic[bool-dtype-tan]",
    "tests/indexes/test_numpy_compat.py::test_numpy_ufuncs_basic[bool-dtype-arcsin]",
    "tests/indexes/test_numpy_compat.py::test_numpy_ufuncs_basic[bool-dtype-arccos]",
    "tests/indexes/test_numpy_compat.py::test_numpy_ufuncs_basic[bool-dtype-arctan]",
    "tests/indexes/test_numpy_compat.py::test_numpy_ufuncs_basic[bool-dtype-sinh]",
    "tests/indexes/test_numpy_compat.py::test_numpy_ufuncs_basic[bool-dtype-cosh]",
    "tests/indexes/test_numpy_compat.py::test_numpy_ufuncs_basic[bool-dtype-tanh]",
    "tests/indexes/test_numpy_compat.py::test_numpy_ufuncs_basic[bool-dtype-arcsinh]",
    "tests/indexes/test_numpy_compat.py::test_numpy_ufuncs_basic[bool-dtype-arccosh]",
    "tests/indexes/test_numpy_compat.py::test_numpy_ufuncs_basic[bool-dtype-arctanh]",
    "tests/indexes/test_numpy_compat.py::test_numpy_ufuncs_basic[bool-dtype-deg2rad]",
    "tests/indexes/test_numpy_compat.py::test_numpy_ufuncs_basic[bool-dtype-rad2deg]",
    "tests/indexes/test_old_base.py::TestBase::test_ensure_copied_data[bool-dtype]",
    "tests/indexes/test_old_base.py::TestBase::test_ensure_copied_data[nullable_int]",
    "tests/indexes/test_old_base.py::TestBase::test_ensure_copied_data[nullable_float]",
    "tests/indexes/test_old_base.py::TestBase::test_ensure_copied_data[nullable_bool]",
    "tests/indexing/test_loc.py::TestLocListlike::test_loc_named_index",
    "tests/indexes/test_old_base.py::TestBase::test_copy_shares_cache[simple_index0]",
    "tests/indexes/test_old_base.py::TestBase::test_copy_shares_cache[simple_index4]",
    "tests/indexes/test_old_base.py::TestBase::test_copy_shares_cache[simple_index10]",
    "tests/indexes/test_old_base.py::TestBase::test_copy_shares_cache[simple_index11]",
    "tests/indexes/test_old_base.py::TestBase::test_copy_shares_cache[simple_index12]",
    "tests/indexes/test_old_base.py::TestBase::test_copy_shares_cache[simple_index13]",
    "tests/indexes/test_old_base.py::TestBase::test_shallow_copy_shares_cache[simple_index0]",
    "tests/indexes/test_old_base.py::TestBase::test_shallow_copy_shares_cache[simple_index4]",
    "tests/indexes/test_old_base.py::TestBase::test_shallow_copy_shares_cache[simple_index10]",
    "tests/indexes/test_old_base.py::TestBase::test_shallow_copy_shares_cache[simple_index11]",
    "tests/indexes/test_old_base.py::TestBase::test_shallow_copy_shares_cache[simple_index12]",
    "tests/indexes/test_old_base.py::TestBase::test_shallow_copy_shares_cache[simple_index13]",
    "tests/indexing/test_partial.py::TestEmptyFrameSetitemExpansion::test_empty_frame_setitem_index_name_retained",
    "tests/indexing/multiindex/test_getitem.py::test_series_getitem_multiindex[0-expected0-<lambda>0]",
    "tests/indexing/multiindex/test_getitem.py::test_series_getitem_multiindex[0-expected0-<lambda>1]",
    "tests/indexing/multiindex/test_getitem.py::test_frame_mixed_depth_get",
    "tests/window/test_rolling.py::test_closed_fixed_binary_col[True-2]",
    "tests/window/test_rolling.py::test_closed_fixed_binary_col[False-2]",
    "tests/window/test_rolling.py::test_rolling_numerical_accuracy_kahan_mean[s-0.0]",
    "tests/window/test_rolling.py::test_rolling_numerical_accuracy_kahan_mean[s-2.0]",
    "tests/window/test_rolling.py::test_rolling_numerical_accuracy_kahan_mean[ms-0.0]",
    "tests/window/test_rolling.py::test_rolling_numerical_accuracy_kahan_mean[ms-2.0]",
    "tests/window/test_rolling.py::test_rolling_numerical_accuracy_kahan_mean[us-0.0]",
    "tests/window/test_rolling.py::test_rolling_numerical_accuracy_kahan_mean[us-2.0]",
    "tests/window/test_rolling.py::test_rolling_numerical_accuracy_kahan_mean[ns-0.0]",
    "tests/window/test_rolling.py::test_rolling_numerical_accuracy_kahan_mean[ns-2.0]",
    "tests/indexes/base_class/test_constructors.py::TestIndexConstructor::test_index_string_inference",
    "tests/indexes/categorical/test_category.py::TestCategoricalIndex2::test_engine_type[int64-Int64Engine]",
    "tests/frame/test_stack_unstack.py::TestStackUnstackMultiLevel::test_unstack_categorical_columns",
    "tests/frame/test_stack_unstack.py::test_stack_tuple_columns[True]",
    "tests/frame/test_stack_unstack.py::test_stack_tuple_columns[False]",
    "tests/frame/test_subclass.py::TestDataFrameSubclassing::test_asof",
    "tests/indexes/datetimes/test_arithmetic.py::TestDatetimeIndexArithmetic::test_sub_datetime_preserves_freq[zoneinfo.ZoneInfo(key='US/Pacific')]",
    "tests/indexes/datetimes/test_arithmetic.py::TestDatetimeIndexArithmetic::test_sub_datetime_preserves_freq[zoneinfo.ZoneInfo(key='UTC')]",
    "tests/indexes/datetimes/test_constructors.py::TestDatetimeIndex::test_integer_values_and_tz_interpreted_as_utc",
    "tests/indexes/datetimes/test_constructors.py::TestDatetimeIndex::test_constructor_datetime64_tzformat[W-SUN]",
    "tests/frame/indexing/test_coercion.py::test_26395[at]",
    "tests/window/test_rolling_functions.py::test_rolling_max_gh6297[None]",
    "tests/frame/indexing/test_coercion.py::test_26395[loc]",
    "tests/indexes/datetimes/test_constructors.py::TestDatetimeIndex::test_constructor_dtype",
    "tests/window/test_rolling_functions.py::test_rolling_max_gh6297[1]",
    "tests/indexes/datetimes/test_constructors.py::TestDatetimeIndex::test_dti_constructor_with_dtype_object_int_matches_int_dtype[M8[us]]",
    "tests/window/test_rolling_functions.py::test_rolling_max_gh6297[2]",
    "tests/indexes/datetimes/test_constructors.py::TestDatetimeIndex::test_dti_constructor_with_dtype_object_int_matches_int_dtype[M8[us, US/Pacific]]",
    "tests/window/test_rolling_functions.py::test_rolling_max_gh6297[5]",
    "tests/window/test_rolling_functions.py::test_rolling_max_gh6297[10]",
    "tests/indexes/datetimes/test_date_range.py::TestDateRanges::test_date_range_unsigned_overflow_handling",
    "tests/indexes/datetimes/test_date_range.py::TestDateRanges::test_range_tz_pytz",
    "tests/window/test_rolling_functions.py::test_rolling_max_resample[None]",
    "tests/window/test_rolling_functions.py::test_rolling_max_resample[1]",
    "tests/window/test_rolling_functions.py::test_rolling_max_resample[2]",
    "tests/window/test_rolling_functions.py::test_rolling_max_resample[5]",
    "tests/window/test_rolling_functions.py::test_rolling_max_resample[10]",
    "tests/window/test_rolling_functions.py::test_rolling_min_resample[None]",
    "tests/window/test_rolling_functions.py::test_rolling_min_resample[1]",
    "tests/frame/indexing/test_indexing.py::TestDataFrameIndexing::test_getitem_ix_mixed_integer2",
    "tests/indexes/datetimes/test_indexing.py::TestGetLoc::test_get_loc_nat",
    "tests/window/test_rolling_functions.py::test_rolling_min_resample[2]",
    "tests/window/test_rolling_functions.py::test_rolling_min_resample[5]",
    "tests/window/test_rolling_functions.py::test_rolling_min_resample[10]",
    "tests/window/test_rolling_functions.py::test_rolling_median_resample",
    "tests/indexes/datetimes/test_partial_slicing.py::TestSlicing::test_slice_month",
    "tests/indexes/datetimes/test_partial_slicing.py::TestSlicing::test_getitem_with_datestring_with_UTC_offset[2018-12-02 21:52:00+00:00-2018-12-02 21:50:00+00:00]",
    "tests/indexes/datetimes/test_partial_slicing.py::TestSlicing::test_getitem_with_datestring_with_UTC_offset[2018-12-02 21:52:00+00:00-start2]",
    "tests/indexes/datetimes/test_partial_slicing.py::TestSlicing::test_getitem_with_datestring_with_UTC_offset[end1-2018-12-02 21:50:00+00:00]",
    "tests/indexes/datetimes/test_partial_slicing.py::TestSlicing::test_getitem_with_datestring_with_UTC_offset[end1-start2]",
    "tests/indexes/datetimes/test_partial_slicing.py::TestSlicing::test_getitem_with_datestring_with_UTC_offset[end2-2018-12-02 21:50:00+00:00]",
    "tests/indexing/multiindex/test_loc.py::TestMultiIndexLoc::test_loc_getitem_nested_indexer[list-list]",
    "tests/indexes/datetimes/test_partial_slicing.py::TestSlicing::test_getitem_with_datestring_with_UTC_offset[end2-start2]",
    "tests/indexing/multiindex/test_loc.py::TestMultiIndexLoc::test_loc_getitem_nested_indexer[list-tuple]",
    "tests/indexing/multiindex/test_loc.py::TestMultiIndexLoc::test_loc_getitem_nested_indexer[list-ndarray]",
    "tests/indexing/multiindex/test_loc.py::TestMultiIndexLoc::test_loc_getitem_nested_indexer[list-Series]",
    "tests/indexing/multiindex/test_loc.py::TestMultiIndexLoc::test_loc_getitem_nested_indexer[list-Index]",
    "tests/indexing/multiindex/test_loc.py::TestMultiIndexLoc::test_loc_getitem_nested_indexer[tuple-list]",
    "tests/indexing/multiindex/test_loc.py::TestMultiIndexLoc::test_loc_getitem_nested_indexer[tuple-tuple]",
    "tests/frame/indexing/test_indexing.py::TestDataFrameIndexing::test_loc_internals_not_updated_correctly",
    "tests/indexing/multiindex/test_loc.py::TestMultiIndexLoc::test_loc_getitem_nested_indexer[tuple-ndarray]",
    "tests/indexing/multiindex/test_loc.py::TestMultiIndexLoc::test_loc_getitem_nested_indexer[tuple-Series]",
    "tests/indexing/multiindex/test_loc.py::TestMultiIndexLoc::test_loc_getitem_nested_indexer[tuple-Index]",
    "tests/frame/indexing/test_indexing.py::TestDataFrameIndexing::test_loc_bool_multiindex[bool-indexer1]",
    "tests/frame/indexing/test_indexing.py::TestDataFrameIndexing::test_loc_bool_multiindex[boolean-indexer1]",
    "tests/indexing/multiindex/test_loc.py::TestMultiIndexLoc::test_loc_getitem_nested_indexer[Series-list]",
    "tests/indexes/datetimes/test_timezones.py::TestDatetimeIndexTimezones::test_date_range_localize[s]",
    "tests/indexing/multiindex/test_loc.py::TestMultiIndexLoc::test_loc_getitem_nested_indexer[Series-tuple]",
    "tests/indexes/datetimes/test_timezones.py::TestDatetimeIndexTimezones::test_date_range_localize[ms]",
    "tests/window/test_win_type.py::test_cmov_window_corner[None]",
    "tests/indexes/datetimes/test_timezones.py::TestDatetimeIndexTimezones::test_date_range_localize[us]",
    "tests/indexing/multiindex/test_loc.py::TestMultiIndexLoc::test_loc_getitem_nested_indexer[Series-ndarray]",
    "tests/indexes/datetimes/test_timezones.py::TestDatetimeIndexTimezones::test_date_range_localize[ns]",
    "tests/indexing/multiindex/test_loc.py::TestMultiIndexLoc::test_loc_getitem_nested_indexer[Series-Series]",
    "tests/indexing/multiindex/test_loc.py::TestMultiIndexLoc::test_loc_getitem_nested_indexer[Series-Index]",
    "tests/indexing/multiindex/test_loc.py::TestMultiIndexLoc::test_loc_getitem_nested_indexer[Index-list]",
    "tests/indexing/multiindex/test_loc.py::TestMultiIndexLoc::test_loc_getitem_nested_indexer[Index-tuple]",
    "tests/indexing/multiindex/test_loc.py::TestMultiIndexLoc::test_loc_getitem_nested_indexer[Index-ndarray]",
    "tests/indexing/multiindex/test_loc.py::TestMultiIndexLoc::test_loc_getitem_nested_indexer[Index-Series]",
    "tests/indexing/multiindex/test_loc.py::TestMultiIndexLoc::test_loc_getitem_nested_indexer[Index-Index]",
    "tests/indexes/datetimes/methods/test_isocalendar.py::test_dti_timestamp_isocalendar_fields",
    "tests/indexes/datetimes/methods/test_unique.py::test_index_unique",
    "tests/indexes/interval/test_astype.py::TestDatetimelikeSubtype::test_subtype_integer[index0-int64]",
    "tests/indexes/interval/test_astype.py::TestDatetimelikeSubtype::test_subtype_integer[index1-int64]",
    "tests/indexes/interval/test_astype.py::TestDatetimelikeSubtype::test_subtype_integer[index3-int64]",
    "tests/indexes/interval/test_astype.py::TestDatetimelikeSubtype::test_subtype_integer[index4-int64]",
    "tests/indexes/interval/test_constructors.py::TestFromBreaks::test_constructor_categorical_valid[CategoricalIndex]",
    "tests/indexes/interval/test_constructors.py::TestFromBreaks::test_left_right_dont_share_data",
    "tests/indexes/interval/test_constructors.py::TestFromTuples::test_constructor_categorical_valid[CategoricalIndex]",
    "tests/frame/indexing/test_where.py::TestDataFrameIndexingWhere::test_where_upcasting",
    "tests/indexes/interval/test_indexing.py::TestGetIndexer::test_get_indexer_categorical_with_nans",
    "tests/indexes/interval/test_interval_range.py::TestIntervalRange::test_interval_range_fractional_period",
    "tests/io/test_compression.py::test_dataframe_compression_defaults_to_infer[gzip-to_csv-write_kwargs0-read_csv]",
    "tests/io/test_compression.py::test_dataframe_compression_defaults_to_infer[bz2-to_csv-write_kwargs0-read_csv]",
    "tests/io/test_compression.py::test_dataframe_compression_defaults_to_infer[zip-to_csv-write_kwargs0-read_csv]",
    "tests/io/test_compression.py::test_dataframe_compression_defaults_to_infer[tar-to_csv-write_kwargs0-read_csv]",
    "tests/io/test_compression.py::test_dataframe_compression_defaults_to_infer[zstd-to_csv-write_kwargs0-read_csv]",
    "tests/io/test_fsspec.py::test_json_options[gzip]",
    "tests/io/test_fsspec.py::test_json_options[bz2]",
    "tests/io/test_fsspec.py::test_json_options[zip]",
    "tests/io/test_fsspec.py::test_json_options[tar]",
    "tests/io/test_fsspec.py::test_json_options[zstd]",
    "tests/indexes/multi/test_astype.py::test_astype",
    "tests/indexes/multi/test_compat.py::test_inplace_mutation_resets_values",
    "tests/indexes/multi/test_constructors.py::test_from_arrays_respects_none_names",
    "tests/indexes/multi/test_constructors.py::test_create_index_existing_name",
    "tests/indexes/multi/test_copy.py::test_copy",
    "tests/indexes/multi/test_copy.py::test_shallow_copy",
    "tests/indexes/multi/test_copy.py::test_view",
    "tests/io/test_orc.py::test_string_inference",
    "tests/indexes/multi/test_drop.py::test_droplevel_multiindex_one_level",
    "tests/io/test_parquet.py::TestBasic::test_read_empty_array[object]",
    "tests/io/test_parquet.py::TestBasic::test_read_empty_array[float]",
    "tests/io/test_parquet.py::TestParquetPyArrow::test_empty_dataframe",
    "tests/indexes/multi/test_equivalence.py::test_equals_multi",
    "tests/io/test_parquet.py::TestParquetPyArrow::test_read_dtype_backend_pyarrow_config",
    "tests/io/test_parquet.py::TestParquetPyArrow::test_infer_string_large_string_type",
    "tests/indexes/multi/test_get_set.py::test_set_levels_categorical[True]",
    "tests/indexes/multi/test_get_set.py::test_set_levels_categorical[False]",
    "tests/frame/methods/test_asof.py::TestFrameAsof::test_subset",
    "tests/indexes/multi/test_join.py::test_join_self[inner]",
    "tests/indexes/multi/test_join.py::test_join_self[outer]",
    "tests/indexes/multi/test_join.py::test_join_self[left]",
    "tests/indexes/multi/test_join.py::test_join_self[right]",
    "tests/io/test_sql.py::test_api_execute_sql[sqlite_engine_iris]",
    "tests/series/indexing/test_setitem.py::TestCoercionFloat64::test_index_where[True-object-FutureWarning]",
    "tests/series/indexing/test_setitem.py::TestCoercionFloat64::test_index_putmask[True-object-FutureWarning]",
    "tests/io/test_sql.py::test_api_execute_sql[sqlite_conn_iris]",
    "tests/io/test_sql.py::test_api_execute_sql[sqlite_str_iris]",
    "tests/io/test_sql.py::test_api_execute_sql[sqlite_buildin_iris]",
    "tests/indexes/multi/test_setops.py::test_intersection_non_object[None]",
    "tests/indexes/multi/test_setops.py::test_intersection_non_object[False]",
    "tests/series/indexing/test_setitem.py::TestCoercionFloat32::test_index_where[True-object-FutureWarning]",
    "tests/io/test_sql.py::test_execute_sql[sqlite_engine_iris]",
    "tests/series/indexing/test_setitem.py::TestCoercionFloat32::test_index_putmask[True-object-FutureWarning]",
    "tests/io/test_sql.py::test_execute_sql[sqlite_conn_iris]",
    "tests/indexes/object/test_indexing.py::TestGetIndexer::test_get_indexer_with_NA_values[None-nan]",
    "tests/indexes/object/test_indexing.py::TestGetIndexer::test_get_indexer_with_NA_values[nan-None]",
    "tests/indexes/period/test_constructors.py::TestPeriodIndex::test_constructor_fromarraylike",
    "tests/io/test_sql.py::test_execute_sql[sqlite_str_iris]",
    "tests/io/test_sql.py::test_execute_sql[sqlite_buildin_iris]",
    "tests/io/test_sql.py::test_xsqlite_write_row_by_row",
    "tests/io/test_sql.py::test_xsqlite_if_exists",
    "tests/frame/methods/test_dropna.py::TestDataFrameMissingData::test_drop_and_dropna_caching",
    "tests/io/parser/test_parse_dates.py::test_parse_dates_column_list[c_high-parse_dates0]",
    "tests/io/parser/test_parse_dates.py::test_parse_dates_column_list[c_high-parse_dates1]",
    "tests/io/parser/test_parse_dates.py::test_parse_dates_column_list[c_low-parse_dates0]",
    "tests/io/parser/test_parse_dates.py::test_parse_dates_column_list[c_low-parse_dates1]",
    "tests/io/parser/test_parse_dates.py::test_parse_dates_column_list[python-parse_dates0]",
    "tests/io/parser/test_parse_dates.py::test_parse_dates_column_list[python-parse_dates1]",
    "tests/io/parser/common/test_common_basic.py::test_override_set_noconvert_columns",
    "tests/io/parser/common/test_file_buffer_url.py::test_context_manager[c_high]",
    "tests/io/parser/common/test_file_buffer_url.py::test_context_manager[c_low]",
    "tests/io/parser/common/test_file_buffer_url.py::test_context_manager[python]",
    "tests/io/parser/common/test_file_buffer_url.py::test_context_manageri_user_provided[c_high]",
    "tests/io/parser/common/test_file_buffer_url.py::test_context_manageri_user_provided[c_low]",
    "tests/io/parser/common/test_file_buffer_url.py::test_context_manageri_user_provided[python]",
    "tests/series/indexing/test_xs.py::TestXSWithMultiIndex::test_xs_level_series",
    "tests/io/test_stata.py::TestStata::test_utf8_writer[118]",
    "tests/io/test_stata.py::TestStata::test_utf8_writer[119]",
    "tests/io/test_stata.py::TestStata::test_utf8_writer[None]",
    "tests/io/test_stata.py::TestStata::test_read_write_ea_dtypes[numpy_nullable]",
    "tests/io/test_stata.py::TestStata::test_read_write_ea_dtypes[pyarrow]",
    "tests/reductions/test_stat_reductions.py::TestSeriesStatReductions::test_sum",
    "tests/reductions/test_stat_reductions.py::TestSeriesStatReductions::test_mean",
    "tests/reductions/test_stat_reductions.py::TestSeriesStatReductions::test_median",
    "tests/reductions/test_stat_reductions.py::TestSeriesStatReductions::test_prod",
    "tests/reductions/test_stat_reductions.py::TestSeriesStatReductions::test_min",
    "tests/reductions/test_stat_reductions.py::TestSeriesStatReductions::test_max",
    "tests/reductions/test_stat_reductions.py::TestSeriesStatReductions::test_var_std",
    "tests/reductions/test_stat_reductions.py::TestSeriesStatReductions::test_sem",
    "tests/reductions/test_stat_reductions.py::TestSeriesStatReductions::test_skew",
    "tests/reductions/test_stat_reductions.py::TestSeriesStatReductions::test_kurt",
    "tests/io/test_stata.py::test_non_categorical_value_labels",
    "tests/groupby/test_groupby_subclass.py::test_groupby_preserves_subclass[all-obj0]",
    "tests/groupby/test_groupby_subclass.py::test_groupby_preserves_subclass[any-obj0]",
    "tests/groupby/test_groupby_subclass.py::test_groupby_preserves_subclass[corrwith-obj0]",
    "tests/groupby/test_groupby_subclass.py::test_groupby_preserves_subclass[count-obj0]",
    "tests/groupby/test_groupby_subclass.py::test_groupby_preserves_subclass[first-obj0]",
    "tests/groupby/test_groupby_subclass.py::test_groupby_preserves_subclass[idxmax-obj0]",
    "tests/groupby/test_groupby_subclass.py::test_groupby_preserves_subclass[idxmin-obj0]",
    "tests/groupby/test_groupby_subclass.py::test_groupby_preserves_subclass[last-obj0]",
    "tests/groupby/test_groupby_subclass.py::test_groupby_preserves_subclass[max-obj0]",
    "tests/groupby/test_groupby_subclass.py::test_groupby_preserves_subclass[mean-obj0]",
    "tests/groupby/test_groupby_subclass.py::test_groupby_preserves_subclass[median-obj0]",
    "tests/groupby/test_groupby_subclass.py::test_groupby_preserves_subclass[min-obj0]",
    "tests/groupby/test_groupby_subclass.py::test_groupby_preserves_subclass[nunique-obj0]",
    "tests/groupby/test_groupby_subclass.py::test_groupby_preserves_subclass[prod-obj0]",
    "tests/groupby/test_groupby_subclass.py::test_groupby_preserves_subclass[quantile-obj0]",
    "tests/groupby/test_groupby_subclass.py::test_groupby_preserves_subclass[sem-obj0]",
    "tests/groupby/test_groupby_subclass.py::test_groupby_preserves_subclass[skew-obj0]",
    "tests/groupby/test_groupby_subclass.py::test_groupby_preserves_subclass[std-obj0]",
    "tests/groupby/test_groupby_subclass.py::test_groupby_preserves_subclass[sum-obj0]",
    "tests/groupby/test_groupby_subclass.py::test_groupby_preserves_subclass[var-obj0]",
    "tests/groupby/test_groupby_subclass.py::test_groupby_preserves_subclass[bfill-obj0]",
    "tests/groupby/test_groupby_subclass.py::test_groupby_preserves_subclass[cummax-obj0]",
    "tests/groupby/test_groupby_subclass.py::test_groupby_preserves_subclass[cummin-obj0]",
    "tests/groupby/test_groupby_subclass.py::test_groupby_preserves_subclass[cumprod-obj0]",
    "tests/groupby/test_groupby_subclass.py::test_groupby_preserves_subclass[cumsum-obj0]",
    "tests/groupby/test_groupby_subclass.py::test_groupby_preserves_subclass[diff-obj0]",
    "tests/groupby/test_groupby_subclass.py::test_groupby_preserves_subclass[ffill-obj0]",
    "tests/groupby/test_groupby_subclass.py::test_groupby_preserves_subclass[fillna-obj0]",
    "tests/groupby/test_groupby_subclass.py::test_groupby_preserves_subclass[pct_change-obj0]",
    "tests/groupby/test_groupby_subclass.py::test_groupby_preserves_subclass[rank-obj0]",
    "tests/groupby/test_groupby_subclass.py::test_groupby_preserves_subclass[shift-obj0]",
    "tests/groupby/test_groupby_subclass.py::test_groupby_preserves_metadata",
    "tests/groupby/test_grouping.py::TestGrouping::test_multiindex_negative_level",
    "tests/groupby/test_grouping.py::TestGrouping::test_multiindex_columns_empty_level",
    "tests/groupby/test_grouping.py::TestGrouping::test_groupby_level[True]",
    "tests/groupby/test_grouping.py::TestGrouping::test_groupby_level[False]",
    "tests/frame/methods/test_join.py::TestDataFrameJoin::test_join",
    "tests/io/excel/test_writers.py::TestExcelWriterEngineTests::test_ExcelWriter_dispatch[OpenpyxlWriter-.xlsx]",
    "tests/io/excel/test_writers.py::TestExcelWriterEngineTests::test_register_writer",
    "tests/groupby/test_grouping.py::test_grouper_groups",
    "tests/frame/methods/test_quantile.py::TestDataFrameQuantile::test_empty[linear-single]",
    "tests/groupby/test_missing.py::test_groupby_column_index_name_lost_fill_funcs[ffill]",
    "tests/groupby/test_missing.py::test_groupby_column_index_name_lost_fill_funcs[bfill]",
    "tests/frame/methods/test_quantile.py::TestDataFrameQuantile::test_empty[nearest-table]",
    "tests/groupby/test_missing.py::test_ffill_handles_nan_groups[False-True-ffill]",
    "tests/groupby/test_missing.py::test_ffill_handles_nan_groups[False-True-bfill]",
    "tests/groupby/test_missing.py::test_ffill_handles_nan_groups[False-False-ffill]",
    "tests/groupby/test_missing.py::test_ffill_handles_nan_groups[False-False-bfill]",
    "tests/groupby/test_missing.py::test_indices_with_missing",
    "tests/frame/methods/test_quantile.py::TestDataFrameQuantile::test_quantile_datetime[s]",
    "tests/frame/methods/test_quantile.py::TestDataFrameQuantile::test_quantile_datetime[ms]",
    "tests/frame/methods/test_quantile.py::TestDataFrameQuantile::test_quantile_datetime[us]",
    "tests/frame/methods/test_quantile.py::TestDataFrameQuantile::test_quantile_datetime[ns]",
    "tests/frame/methods/test_quantile.py::TestDataFrameQuantile::test_quantile_nat[linear-single-s]",
    "tests/frame/methods/test_quantile.py::TestDataFrameQuantile::test_quantile_nat[linear-single-ms]",
    "tests/frame/methods/test_quantile.py::TestDataFrameQuantile::test_quantile_nat[linear-single-us]",
    "tests/frame/methods/test_quantile.py::TestDataFrameQuantile::test_quantile_nat[linear-single-ns]",
    "tests/frame/methods/test_quantile.py::TestDataFrameQuantile::test_quantile_empty_no_rows_dt64[linear-single]",
    "tests/frame/methods/test_quantile.py::TestDataFrameQuantile::test_quantile_empty_no_columns[linear-single]",
    "tests/io/formats/test_format.py::TestTimedelta64Formatter::test_days",
    "tests/io/formats/test_format.py::TestTimedelta64Formatter::test_days_neg",
    "tests/io/formats/test_format.py::TestTimedelta64Formatter::test_subdays",
    "tests/io/formats/test_format.py::TestTimedelta64Formatter::test_subdays_neg",
    "tests/io/formats/test_format.py::TestTimedelta64Formatter::test_zero",
    "tests/frame/methods/test_quantile.py::TestQuantileExtensionDtype::test_quantile_ea_scalar[timedelta64[ns]-DataFrame]",
    "tests/frame/methods/test_quantile.py::TestQuantileExtensionDtype::test_empty_datelike[datetime64[ns]-expected_data1-expected_index1-0-datetime64[ns]]",
    "tests/strings/test_find_replace.py::test_replace_unicode[string[pyarrow]]",
    "tests/strings/test_find_replace.py::test_replace_unicode[string[pyarrow_numpy]]",
    "tests/strings/test_find_replace.py::test_replace_callable[string[pyarrow]]",
    "tests/strings/test_find_replace.py::test_replace_callable[string[pyarrow_numpy]]",
    "tests/strings/test_find_replace.py::test_replace_callable_raises[string[pyarrow]-<lambda>0]",
    "tests/strings/test_find_replace.py::test_replace_callable_raises[string[pyarrow]-<lambda>1]",
    "tests/strings/test_find_replace.py::test_replace_callable_raises[string[pyarrow]-<lambda>2]",
    "tests/strings/test_find_replace.py::test_replace_callable_raises[string[pyarrow_numpy]-<lambda>0]",
    "tests/strings/test_find_replace.py::test_replace_callable_raises[string[pyarrow_numpy]-<lambda>1]",
    "tests/strings/test_find_replace.py::test_replace_callable_raises[string[pyarrow_numpy]-<lambda>2]",
    "tests/strings/test_find_replace.py::test_replace_callable_named_groups[string[pyarrow]]",
    "tests/strings/test_find_replace.py::test_replace_callable_named_groups[string[pyarrow_numpy]]",
    "tests/strings/test_find_replace.py::test_replace_compiled_regex[string[pyarrow]]",
    "tests/strings/test_find_replace.py::test_replace_compiled_regex[string[pyarrow_numpy]]",
    "tests/strings/test_find_replace.py::test_replace_compiled_regex_unicode[string[pyarrow]]",
    "tests/strings/test_find_replace.py::test_replace_compiled_regex_unicode[string[pyarrow_numpy]]",
    "tests/strings/test_find_replace.py::test_replace_compiled_regex_callable[string[pyarrow]]",
    "tests/strings/test_find_replace.py::test_replace_compiled_regex_callable[string[pyarrow_numpy]]",
    "tests/strings/test_find_replace.py::test_replace_moar[string[pyarrow]]",
    "tests/strings/test_find_replace.py::test_replace_moar[string[pyarrow_numpy]]",
    "tests/strings/test_find_replace.py::test_replace_not_case_sensitive_not_regex[string[pyarrow]]",
    "tests/strings/test_find_replace.py::test_replace_not_case_sensitive_not_regex[string[pyarrow_numpy]]",
    "tests/strings/test_find_replace.py::test_fullmatch_case_kwarg[string[pyarrow]]",
    "tests/strings/test_find_replace.py::test_fullmatch_case_kwarg[string[pyarrow_numpy]]",
    "tests/strings/test_find_replace.py::test_flags_kwarg[string[pyarrow]]",
    "tests/strings/test_find_replace.py::test_flags_kwarg[string[pyarrow_numpy]]",
    "tests/strings/test_split_partition.py::test_rsplit_to_multiindex_expand_no_split",
    "tests/io/formats/style/test_format.py::test_format_clear[format_index-_display_funcs_index-kwargs1]",
    "tests/io/formats/style/test_format.py::test_format_clear[format_index-_display_funcs_columns-kwargs2]",
    "tests/frame/methods/test_reindex.py::TestDataFrameSelectReindex::test_reindex_nearest_tz[zoneinfo.ZoneInfo(key='US/Pacific')]",
    "tests/io/formats/style/test_html.py::test_html_template_extends_options",
    "tests/frame/methods/test_reindex.py::TestDataFrameSelectReindex::test_reindex_nearest_tz[zoneinfo.ZoneInfo(key='UTC')]",
    "tests/io/formats/style/test_html.py::test_sticky_basic[True-False-False]",
    "tests/io/formats/style/test_html.py::test_sticky_basic[True-False-True]",
    "tests/io/formats/style/test_html.py::test_sticky_basic[True-True-False]",
    "tests/io/formats/style/test_html.py::test_sticky_basic[True-True-True]",
    "tests/io/formats/style/test_style.py::test_apply_map_header_mi[index-apply]",
    "tests/io/formats/style/test_style.py::test_apply_map_header_mi[index-map]",
    "tests/io/formats/style/test_style.py::test_apply_map_header_mi[columns-apply]",
    "tests/io/formats/style/test_style.py::test_apply_map_header_mi[columns-map]",
    "tests/frame/methods/test_reindex.py::TestDataFrameSelectReindex::test_reindex_empty[cat_idx1-src_idx0]",
    "tests/frame/methods/test_reindex.py::TestDataFrameSelectReindex::test_reindex_empty[cat_idx1-src_idx1]",
    "tests/io/formats/style/test_style.py::TestStyler::test_subset_for_boolean_cols[background_gradient]",
    "tests/frame/methods/test_reindex.py::TestDataFrameSelectReindex::test_reindex_empty[cat_idx3-src_idx0]",
    "tests/frame/methods/test_reindex.py::TestDataFrameSelectReindex::test_reindex_empty[cat_idx3-src_idx1]",
    "tests/io/formats/style/test_style.py::TestStyler::test_subset_for_boolean_cols[text_gradient]",
    "tests/io/json/test_compression.py::test_compression_roundtrip[gzip]",
    "tests/io/json/test_compression.py::test_compression_roundtrip[bz2]",
    "tests/io/json/test_compression.py::test_compression_roundtrip[zip]",
    "tests/io/json/test_compression.py::test_compression_roundtrip[tar]",
    "tests/io/json/test_compression.py::test_compression_roundtrip[zstd]",
    "tests/io/json/test_compression.py::test_lines_with_compression[gzip]",
    "tests/io/json/test_compression.py::test_lines_with_compression[bz2]",
    "tests/io/json/test_compression.py::test_lines_with_compression[zip]",
    "tests/frame/methods/test_replace.py::TestDataFrameReplace::test_replace_value_is_none",
    "tests/io/json/test_compression.py::test_lines_with_compression[tar]",
    "tests/io/json/test_compression.py::test_lines_with_compression[zstd]",
    "tests/io/json/test_compression.py::test_chunksize_with_compression[gzip]",
    "tests/io/json/test_compression.py::test_chunksize_with_compression[bz2]",
    "tests/io/json/test_compression.py::test_chunksize_with_compression[zip]",
    "tests/io/json/test_compression.py::test_chunksize_with_compression[tar]",
    "tests/io/json/test_compression.py::test_chunksize_with_compression[zstd]",
    "tests/io/json/test_pandas.py::TestPandasContainer::test_read_timezone_information",
    "tests/frame/methods/test_sort_index.py::TestDataFrameSortIndex::test_sort_index_intervalindex",
    "tests/io/parser/test_compression.py::test_writes_tar_gz[c_high]",
    "tests/io/parser/test_compression.py::test_writes_tar_gz[c_low]",
    "tests/io/parser/test_compression.py::test_writes_tar_gz[python]",
    "tests/tools/test_to_datetime.py::TestToDatetimeUnit::test_to_datetime_errors_ignore_utc_true",
    "tests/frame/methods/test_to_csv.py::TestDataFrameToCSV::test_to_csv_from_csv1",
    "tests/groupby/test_categorical.py::test_category_order_apply[False-True-True-True-apply-range]",
    "tests/groupby/test_categorical.py::test_category_order_apply[False-True-True-False-apply-range]",
    "tests/groupby/test_categorical.py::test_category_order_apply[False-False-True-True-apply-range]",
    "tests/groupby/test_categorical.py::test_category_order_apply[False-False-True-False-apply-range]",
    "tests/frame/methods/test_to_csv.py::TestDataFrameToCSV::test_gz_lineend",
    "tests/tools/test_to_numeric.py::test_numeric_dtypes[transform_assert_equal0-data0]",
    "tests/tools/test_to_numeric.py::test_numeric_dtypes[transform_assert_equal0-data1]",
    "tests/tools/test_to_numeric.py::test_str[transform_assert_equal0-data0-exp0]",
    "tests/tools/test_to_numeric.py::test_str[transform_assert_equal0-data1-exp1]",
    "tests/tools/test_to_numeric.py::test_datetime_like[None-transform_assert_equal0]",
    "tests/tools/test_to_numeric.py::test_datetime_like[zoneinfo.ZoneInfo(key='US/Pacific')-transform_assert_equal0]",
    "tests/tools/test_to_numeric.py::test_datetime_like[zoneinfo.ZoneInfo(key='UTC')-transform_assert_equal0]",
    "tests/tseries/offsets/test_business_day.py::TestBusinessDay::test_with_offset_index[timedelta64]",
    "tests/groupby/test_groupby.py::test_frame_groupby_columns",
    "tests/groupby/test_groupby.py::test_as_index_select_column",
    "tests/strings/test_cat.py::test_str_cat_categorical[index-object-object--True]",
    "tests/strings/test_cat.py::test_str_cat_categorical[index-object-object-None-True]",
    "tests/strings/test_cat.py::test_str_cat_categorical[index-object-category--True]",
    "tests/strings/test_cat.py::test_str_cat_categorical[index-object-category-None-True]",
    "tests/groupby/test_groupby.py::test_groupby_level_mapper",
    "tests/groupby/test_groupby.py::test_groupby_with_hier_columns",
    "tests/groupby/test_groupby.py::test_groupby_series_with_name",
    "tests/groupby/test_groupby.py::test_handle_dict_return_value",
    "tests/groupby/test_apply_mutate.py::test_apply_function_with_indexing",
    "tests/groupby/test_categorical.py::test_observed_codes_remap[True]",
    "tests/groupby/test_categorical.py::test_observed_groups[True]",
    "tests/groupby/test_categorical.py::test_observed_groups_with_nan[True]",
    "tests/groupby/test_categorical.py::test_describe_categorical_columns",
    "tests/groupby/test_categorical.py::test_unstack_categorical",
    "tests/groupby/test_groupby.py::test_groupby_groups_in_BaseGrouper",
    "tests/groupby/test_groupby.py::test_groupby_crash_on_nunique[axis=0]",
    "tests/groupby/test_groupby.py::test_groupby_crash_on_nunique[axis='index']",
    "tests/groupby/test_groupby.py::test_group_on_two_row_multiindex_returns_one_tuple_key",
    "tests/groupby/test_groupby.py::test_groupby_column_index_name_lost[sum]",
    "tests/groupby/test_groupby.py::test_groupby_column_index_name_lost[shift]",
    "tests/generic/test_frame.py::TestDataFrame::test_metadata_propagation_indiv",
    "tests/generic/test_generic.py::TestNDFrame::test_transpose_frame",
    "tests/generic/test_generic.py::TestNDFrame::test_numpy_transpose[DataFrame]",
    "tests/generic/test_series.py::TestSeries::test_metadata_propagation_indiv",
    "tests/groupby/test_api.py::test_all_methods_categorized",
    "tests/groupby/test_apply.py::test_apply_func_that_appends_group_to_list_without_copy",
    "tests/groupby/test_apply.py::test_apply_frame_concat_series",
    "tests/groupby/test_apply.py::test_apply_multiindex_fail",
    "tests/groupby/test_apply.py::test_apply_index_has_complex_internals[index3]",
    "tests/frame/methods/test_value_counts.py::test_data_frame_value_counts_empty",
    "tests/frame/methods/test_value_counts.py::test_data_frame_value_counts_empty_normalize",
    "tests/frame/methods/test_value_counts.py::test_data_frame_value_counts_subset[NoneType-columns1]",
    "tests/frame/methods/test_value_counts.py::test_data_frame_value_counts_subset[NaTType-columns1]",
    "tests/frame/methods/test_value_counts.py::test_data_frame_value_counts_subset[NAType-columns1]",
    "tests/frame/methods/test_value_counts.py::test_data_frame_value_counts_subset[Decimal-columns1]",
    "tests/io/test_sql.py::test_api_execute_sql[sqlite_engine_iris]",
    "tests/io/test_sql.py::test_api_execute_sql[sqlite_conn_iris]",
    "tests/io/test_sql.py::test_execute_sql[sqlite_engine_iris]",
    "tests/io/test_sql.py::test_execute_sql[sqlite_conn_iris]",
}


def pytest_collection_modifyitems(session, config, items):
    for item in items:
        if item.nodeid in NODEIDS_THAT_FAIL_WITH_CUDF_PANDAS:
            item.add_marker(
                pytest.mark.xfail(reason="Fails with cudf.pandas enabled.")
            )


@pytest.hookimpl(tryfirst=True, hookwrapper=True)
def pytest_runtest_makereport(item, call):
    # Let pytest run the test and generate a report
    outcome = yield
    rep = outcome.get_result()
    # Only process actual test call failures (not setup/teardown)
    if (
        rep.when in {"call", "setup"}
        and rep.failed
        and call.excinfo is not None
    ):
        error_message = str(call.excinfo.value)
        if is_known_error(error_message):
            # Mark as xfail
            rep.outcome = "skipped"
            rep.wasxfail = f"xfail due to known error: {error_message[:50]}"


sys.path.append(os.path.dirname(__file__))
