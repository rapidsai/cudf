# Copyright (c) 2021-2024, NVIDIA CORPORATION.

[build-system]
build-backend = "rapids_build_backend.build"
requires = [
    "rapids-build-backend>=0.3.0,<0.4.0.dev0",
    "setuptools",
    "wheel",
] # This list was generated by `rapids-dependency-file-generator`. To make changes, edit ../../dependencies.yaml and run `rapids-dependency-file-generator`.

[project]
name = "dask-cudf"
dynamic = ["version"]
description = "Utilities for Dask and cuDF interactions"
readme = { file = "README.md", content-type = "text/markdown" }
authors = [
    { name = "NVIDIA Corporation" },
]
license = { text = "Apache 2.0" }
requires-python = ">=3.10"
dependencies = [
    "cudf==24.10.*,>=0.0.0a0",
    "cupy-cuda11x>=12.0.0",
    "fsspec>=0.6.0",
    "numpy>=1.23,<3.0a0",
    "pandas>=2.0,<2.2.3dev0",
    "rapids-dask-dependency==24.10.*,>=0.0.0a0",
] # This list was generated by `rapids-dependency-file-generator`. To make changes, edit ../../dependencies.yaml and run `rapids-dependency-file-generator`.
classifiers = [
    "Intended Audience :: Developers",
    "Topic :: Database",
    "Topic :: Scientific/Engineering",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

[project.entry-points."dask.dataframe.backends"]
cudf = "dask_cudf.backends:CudfBackendEntrypoint"

[project.entry-points."dask_expr.dataframe.backends"]
cudf = "dask_cudf.backends:CudfDXBackendEntrypoint"

[project.optional-dependencies]
test = [
    "dask-cuda==24.10.*,>=0.0.0a0",
    "numba>=0.57",
    "pytest-cov",
    "pytest-xdist",
    "pytest<8",
] # This list was generated by `rapids-dependency-file-generator`. To make changes, edit ../../dependencies.yaml and run `rapids-dependency-file-generator`.

[project.urls]
Homepage = "https://github.com/rapidsai/cudf"

[tool.rapids-build-backend]
build-backend = "setuptools.build_meta"
dependencies-file = "../../dependencies.yaml"
matrix-entry = "cuda_suffixed=true"

[tool.setuptools]
license-files = ["LICENSE"]

[tool.setuptools.dynamic]
version = {file = "dask_cudf/VERSION"}

[tool.setuptools.packages.find]
exclude = ["*tests*"]

[tool.isort]
line_length = 79
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
combine_as_imports = true
order_by_type = true

known_dask = [
    "dask",
    "distributed",
    "dask_cuda",
]
known_rapids = [
    "rmm",
    "cudf",
]
known_first_party = [
    "dask_cudf",
]

default_section = "THIRDPARTY"
sections = [
    "FUTURE",
    "STDLIB",
    "THIRDPARTY",
    "DASK",
    "RAPIDS",
    "FIRSTPARTY",
    "LOCALFOLDER",
]
skip = [
    "thirdparty",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".tox",
    ".venv",
    "_build",
    "buck-out",
    "build",
    "dist",
]

[tool.pytest.ini_options]
filterwarnings = [
    "error::FutureWarning",
    "error::DeprecationWarning",
    "ignore:create_block_manager_from_blocks is deprecated and will be removed in a future version. Use public APIs instead.:DeprecationWarning",
    # https://github.com/dask/partd/blob/main/partd/pandas.py#L198
    "ignore:Passing a BlockManager to DataFrame is deprecated and will raise in a future version. Use public APIs instead.:DeprecationWarning",
    "ignore:String support for `aggregate_files` is experimental. Behavior may change in the future.:FutureWarning:dask",
]
