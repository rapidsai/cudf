# Copyright (c) 2021-2024, NVIDIA CORPORATION.

[build-system]
build-backend = "rapids_build_backend.build"
requires = [
    "rapids-build-backend>=0.3.0,<0.4.0.dev0",
    "setuptools",
    "wheel",
] # This list was generated by `rapids-dependency-file-generator`. To make changes, edit ../../dependencies.yaml and run `rapids-dependency-file-generator`.

[project]
name = "custreamz"
dynamic = ["version"]
description = "cuStreamz - GPU Accelerated Streaming"
readme = { file = "README.md", content-type = "text/markdown" }
authors = [
    { name = "NVIDIA Corporation" },
]
license = { text = "Apache 2.0" }
requires-python = ">=3.10"
dependencies = [
    "confluent-kafka>=2.5.0,<2.6.0a0",
    "cudf==24.12.*,>=0.0.0a0",
    "cudf_kafka==24.12.*,>=0.0.0a0",
    "streamz",
] # This list was generated by `rapids-dependency-file-generator`. To make changes, edit ../../dependencies.yaml and run `rapids-dependency-file-generator`.
classifiers = [
    "Intended Audience :: Developers",
    "Topic :: Streaming",
    "Topic :: Scientific/Engineering",
    "Topic :: Apache Kafka",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[project.optional-dependencies]
test = [
    "pytest-cov",
    "pytest-xdist",
    "pytest<8",
] # This list was generated by `rapids-dependency-file-generator`. To make changes, edit ../../dependencies.yaml and run `rapids-dependency-file-generator`.

[project.urls]
Homepage = "https://github.com/rapidsai/cudf"

[tool.rapids-build-backend]
build-backend = "setuptools.build_meta"
dependencies-file = "../../dependencies.yaml"
matrix-entry = "cuda_suffixed=true"

[tool.setuptools]
license-files = ["LICENSE"]
zip-safe = false

[tool.setuptools.dynamic]
version = {file = "custreamz/VERSION"}

[tool.setuptools.packages.find]
include = [
    "custreamz",
    "custreamz.*",
]
exclude = ["*tests*"]

[tool.pydistcheck]
select = [
    "distro-too-large-compressed",
]

# PyPI limit is 100 MiB, fail CI before we get too close to that
max_allowed_size_compressed = '75M'

[tool.ruff]
extend = "../../pyproject.toml"

[tool.ruff.lint.isort]
combine-as-imports = true
known-first-party = ["streamz"]
section-order = ["future", "standard-library", "third-party", "dask", "rapids", "first-party", "local-folder"]

[tool.ruff.lint.isort.sections]
dask = ["dask", "distributed", "dask_cuda"]
rapids = ["rmm", "cudf", "dask_cudf"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401"]

[tool.pytest.ini_options]
addopts = "--tb=native --strict-config --strict-markers"
empty_parameter_set_mark = "fail_at_collect"
filterwarnings = [
    "error",
    # https://github.com/rapidsai/build-planning/issues/116
    "ignore:.*cuda..* module is deprecated.*:DeprecationWarning",
    "ignore:unclosed <socket.socket:ResourceWarning",
    "ignore:Port .* is already in use.:UserWarning:distributed",
    # Should be fixed in the next streamz release
    # https://github.com/python-streamz/streamz/commit/2812f1f961dfcb3f17e948d8b12a12472975558e
    "ignore:pkg_resources is deprecated as an API:DeprecationWarning:streamz",
    "ignore:Deprecated call to `pkg_resources.declare_namespace:DeprecationWarning",
    # Ignore numba PEP 456 warning specific to arm machines
    "ignore:FNV hashing is not implemented in Numba.*:UserWarning"
]
xfail_strict = true
